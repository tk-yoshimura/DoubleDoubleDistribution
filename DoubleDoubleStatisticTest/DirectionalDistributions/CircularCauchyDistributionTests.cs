using DoubleDouble;
using DoubleDoubleStatistic.DirectionalDistributions;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace DoubleDoubleStatisticTest.DirectionalDistributions {
    [TestClass()]
    public class CircularCauchyDistributionTests {
        readonly CircularCauchyDistribution dist_gamma0mu0 = new(gamma: 0, mu: 0);
        readonly CircularCauchyDistribution dist_gamma1mu1 = new(gamma: 1, mu: 1);
        readonly CircularCauchyDistribution dist_gamma2mu1 = new(gamma: 2, mu: 1);
        readonly CircularCauchyDistribution dist_gamma4mu2 = new(gamma: 4, mu: 2);
        readonly CircularCauchyDistribution dist_gamma4mu3 = new(gamma: 4, mu: 3);
        readonly CircularCauchyDistribution dist_gamma1mum1 = new(gamma: 1, mu: -1);

        CircularCauchyDistribution[] Dists => [
            dist_gamma0mu0,
            dist_gamma1mu1,
            dist_gamma2mu1,
            dist_gamma4mu2,
            dist_gamma4mu3,
            dist_gamma1mum1
        ];

        [TestMethod()]
        public void InfoTest() {
            foreach (CircularCauchyDistribution dist in Dists) {
                Console.WriteLine(dist);
                Console.WriteLine($"Gamma={dist.Gamma}");
                Console.WriteLine($"Mu={dist.Mu}");
                Console.WriteLine($"Mean={dist.Mean}");
                Console.WriteLine($"Mode={dist.Mode}");
                Console.WriteLine($"Variance={dist.Variance}");
                Console.WriteLine($"Skewness={dist.Skewness}");
                //Console.WriteLine($"Kurtosis={dist.Kurtosis}");
                Console.WriteLine($"Entropy={dist.Entropy}");
                Console.WriteLine(dist.Formula);
            }
        }

        [TestMethod()]
        public void MeanTest() {
            Assert.AreEqual(0, (double)dist_gamma0mu0.Mean, 1e-10);
            Assert.AreEqual(1, (double)dist_gamma1mu1.Mean, 1e-10);
            Assert.AreEqual(1, (double)dist_gamma2mu1.Mean, 1e-10);
            Assert.AreEqual(2, (double)dist_gamma4mu2.Mean, 1e-10);
            Assert.AreEqual(3, (double)dist_gamma4mu3.Mean, 1e-10);
            Assert.AreEqual(-1, (double)dist_gamma1mum1.Mean, 1e-10);
        }

        [TestMethod()]
        public void ModeTest() {
            Assert.AreEqual(0, (double)dist_gamma0mu0.Mode, 1e-10);
            Assert.AreEqual(1, (double)dist_gamma1mu1.Mode, 1e-10);
            Assert.AreEqual(1, (double)dist_gamma2mu1.Mode, 1e-10);
            Assert.AreEqual(2, (double)dist_gamma4mu2.Mode, 1e-10);
            Assert.AreEqual(3, (double)dist_gamma4mu3.Mode, 1e-10);
            Assert.AreEqual(-1, (double)dist_gamma1mum1.Mode, 1e-10);
        }

        [TestMethod()]
        public void VarianceTest() {
            Assert.AreEqual(0, (double)dist_gamma0mu0.Variance, 1e-10);
            Assert.AreEqual(0.6321205588285577, (double)dist_gamma1mu1.Variance, 1e-10);
            Assert.AreEqual(0.8646647167633873, (double)dist_gamma2mu1.Variance, 1e-10);
            Assert.AreEqual(0.9816843611112658, (double)dist_gamma4mu2.Variance, 1e-10);
            Assert.AreEqual(0.9816843611112658, (double)dist_gamma4mu3.Variance, 1e-10);
            Assert.AreEqual(0.6321205588285577, (double)dist_gamma1mum1.Variance, 1e-10);
        }

        [TestMethod()]
        public void SkewnessTest() {
            Assert.AreEqual(0, (double)dist_gamma0mu0.Skewness, 1e-10);
            Assert.AreEqual(0, (double)dist_gamma1mu1.Skewness, 1e-10);
            Assert.AreEqual(0, (double)dist_gamma2mu1.Skewness, 1e-10);
            Assert.AreEqual(0, (double)dist_gamma4mu2.Skewness, 1e-10);
            Assert.AreEqual(0, (double)dist_gamma4mu3.Skewness, 1e-10);
            Assert.AreEqual(0, (double)dist_gamma1mum1.Skewness, 1e-10);
        }

        [TestMethod()]
        public void KurtosisTest() {
            Assert.Inconclusive();

            Assert.AreEqual(0, (double)dist_gamma0mu0.Kurtosis, 1e-10);
            Assert.AreEqual(0, (double)dist_gamma1mu1.Kurtosis, 1e-10);
            Assert.AreEqual(0, (double)dist_gamma2mu1.Kurtosis, 1e-10);
            Assert.AreEqual(0, (double)dist_gamma4mu2.Kurtosis, 1e-10);
            Assert.AreEqual(0, (double)dist_gamma4mu3.Kurtosis, 1e-10);
            Assert.AreEqual(0, (double)dist_gamma1mum1.Kurtosis, 1e-10);
        }

        [TestMethod()]
        public void EntropyTest() {
            Assert.IsTrue(ddouble.IsNegativeInfinity(dist_gamma0mu0.Entropy));
            Assert.AreEqual(1.692463608540486, (double)dist_gamma1mu1.Entropy, 1e-10);
            Assert.AreEqual(1.819391619583459, (double)dist_gamma2mu1.Entropy, 1e-10);
            Assert.AreEqual(1.837541547501269, (double)dist_gamma4mu2.Entropy, 1e-10);
            Assert.AreEqual(1.837541547501269, (double)dist_gamma4mu3.Entropy, 1e-10);
            Assert.AreEqual(1.692463608540486, (double)dist_gamma1mum1.Entropy, 1e-10);
        }

        [TestMethod()]
        public void PDFTest() {
            foreach (CircularCauchyDistribution dist in Dists) {
                Console.WriteLine(dist);
                for (int x = -5; x <= 5; x++) {
                    ddouble pdf = dist.PDF(x);

                    Console.WriteLine($"pdf({x})={pdf}");
                }
            }
        }

        [TestMethod()]
        public void RandomGenerateAndFitTest() {
            Random random = new(1234);

            foreach (CircularCauchyDistribution dist in Dists) {
                // ignore
                if (dist.Gamma > 2) {
                    continue;
                }

                double[] samples = dist.Sample(random, count: 100000).ToArray();

                CircularCauchyDistribution? dist_fit = CircularCauchyDistribution.Fit(samples);

                Assert.IsNotNull(dist_fit);

                Console.WriteLine(dist_fit);

                Assert.AreEqual((double)dist.Gamma, (double)dist_fit.Gamma, 0.05, $"{dist},gamma");

                Assert.AreEqual((double)dist.Mu, (double)dist_fit.Mu, 0.05, $"{dist},mu");
            }
        }

        [TestMethod()]
        public void PDFExpectedTest() {
            ddouble[] expected_dist_gamma1mu1 = [
                0.121560120218763,
                0.1047137506272117,
                0.09265701564362987,
                0.08419591597135385,
                0.0785168478869725,
                0.0750961777778628,
                0.07363010475088222,
                0.07399149049481862,
                0.07621149402743287,
                0.08048408317135959,
                0.08719394423603079,
                0.09697029678279283,
                0.1107670380049642,
                0.1299526591807115,
                0.156328982563103,
                0.1918041734585938,
                0.2370048188396328,
                0.2877195451916826,
                0.3301701452543595,
                0.3440550751829124,
                0.3208710905283194,
                0.2742958072211317,
                0.2241570525321926,
                0.1814160597379821,
                0.1485122591241537,
                0.1242389588036257,
                0.1066432477475605,
                0.09402879363019405,
                0.08514454129251003,
                0.07913179660045992,
                0.07543305657405537,
                0.0737183978374542,
                0.07383879951044837,
                0.07580463919728234,
                0.07978719572882567,
                0.08614333325844255,
                0.09546572913549721,
                0.1086598378634381,
                0.1270349531807664,
                0.1523419416488581,
                0.1865208627835963,
                0.2305163632994147,
                0.2810512707780926,
                0.3257565898407422,
                0.344403882417088,
                0.3257565898407422,
                0.2810512707780926,
                0.2305163632994147,
                0.1865208627835963,
                0.1523419416488581,
                0.1270349531807664,
                0.1086598378634381,
                0.09546572913549721,
                0.08614333325844255,
                0.07978719572882567,
                0.07580463919728234,
                0.07383879951044837,
                0.0737183978374542,
                0.07543305657405537,
                0.07913179660045992,
                0.08514454129251003,
                0.09402879363019405,
                0.1066432477475605,
                0.1242389588036257,
                0.1485122591241537,
                0.1814160597379821,
                0.2241570525321926,
                0.2742958072211317,
                0.3208710905283194,
                0.3440550751829124,
                0.3301701452543595,
                0.2877195451916826,
                0.2370048188396328,
                0.1918041734585938,
                0.156328982563103,
                0.1299526591807115,
                0.1107670380049642,
                0.09697029678279283,
                0.08719394423603079,
                0.08048408317135959,
                0.07621149402743287,
            ];
            ddouble[] expected_dist_gamma2mu1 = [
                0.1536104559017001,
                0.144116907193683,
                0.1362126433400386,
                0.1299901187468644,
                0.125450823478376,
                0.1225605684216563,
                0.1212834940133973,
                0.1216004888777916,
                0.1235164779051,
                0.1270586627339725,
                0.1322651934883567,
                0.139161187688776,
                0.1477169161703495,
                0.1577827879270447,
                0.1690008955292227,
                0.1807087339311765,
                0.1918804710881556,
                0.201183223595367,
                0.2072196620163977,
                0.2089344097515584,
                0.2060055418840469,
                0.1989769425639879,
                0.1890381079259038,
                0.1776040576577318,
                0.1659414120578349,
                0.154978726106252,
                0.1452892016485045,
                0.1371658552874116,
                0.1307186971798119,
                0.125957585712933,
                0.1228507059747296,
                0.1213610754634515,
                0.1214667304862033,
                0.1231693160279289,
                0.1264935002695103,
                0.1314770399833836,
                0.1381487415155613,
                0.1464893529492482,
                0.1563698368729244,
                0.1674656149992012,
                0.1791594856806639,
                0.1904740017685323,
                0.2001075138885524,
                0.2066502771638743,
                0.2089760561412966,
                0.2066502771638743,
                0.2001075138885524,
                0.1904740017685323,
                0.1791594856806639,
                0.1674656149992012,
                0.1563698368729244,
                0.1464893529492482,
                0.1381487415155613,
                0.1314770399833836,
                0.1264935002695103,
                0.1231693160279289,
                0.1214667304862033,
                0.1213610754634515,
                0.1228507059747296,
                0.125957585712933,
                0.1307186971798119,
                0.1371658552874116,
                0.1452892016485045,
                0.154978726106252,
                0.1659414120578349,
                0.1776040576577318,
                0.1890381079259038,
                0.1989769425639879,
                0.2060055418840469,
                0.2089344097515584,
                0.2072196620163977,
                0.201183223595367,
                0.1918804710881556,
                0.1807087339311765,
                0.1690008955292227,
                0.1577827879270447,
                0.1477169161703495,
                0.139161187688776,
                0.1322651934883567,
                0.1270586627339725,
                0.1235164779051,
            ];
            ddouble[] expected_dist_gamma4mu2 = [
                0.1641196734157833,
                0.1631396190325236,
                0.1619137693857513,
                0.1605277211002943,
                0.1590739780915779,
                0.1576447545513027,
                0.1563259865519469,
                0.1551928807693,
                0.1543069688718685,
                0.1537143975942025,
                0.1534450830039811,
                0.153512371401416,
                0.1539129428053762,
                0.1546268317580187,
                0.1556175970205234,
                0.1568328242161698,
                0.1582052699021207,
                0.1596550218037594,
                0.1610930218642459,
                0.1624261437395218,
                0.1635637247616781,
                0.1644250606716317,
                0.164946974782812,
                0.1650903103164443,
                0.1648441971911098,
                0.164227268900565,
                0.1632855851207993,
                0.1620876747816936,
                0.1607176400562902,
                0.159267501692892,
                0.1578298884029928,
                0.1564918602756604,
                0.1553302484970645,
                0.1544085216540967,
                0.153774932272041,
                0.1534615782210751,
                0.1534840141895833,
                0.1538411334819762,
                0.15451517489104,
                0.1554718651773017,
                0.1566608620206428,
                0.1580167920238164,
                0.1594612543237677,
                0.1609061469209077,
                0.1622585359596468,
                0.1634270138307366,
                0.1643291093274098,
                0.1648989096974721,
                0.1650937653457782,
                0.1648989096974721,
                0.1643291093274098,
                0.1634270138307366,
                0.1622585359596468,
                0.1609061469209077,
                0.1594612543237677,
                0.1580167920238164,
                0.1566608620206428,
                0.1554718651773017,
                0.15451517489104,
                0.1538411334819762,
                0.1534840141895833,
                0.1534615782210751,
                0.153774932272041,
                0.1544085216540967,
                0.1553302484970645,
                0.1564918602756604,
                0.1578298884029928,
                0.159267501692892,
                0.1607176400562902,
                0.1620876747816936,
                0.1632855851207993,
                0.164227268900565,
                0.1648441971911098,
                0.1650903103164443,
                0.164946974782812,
                0.1644250606716317,
                0.1635637247616781,
                0.1624261437395218,
                0.1610930218642459,
                0.1596550218037594,
                0.1582052699021207,
            ];
            ddouble[] expected_dist_gamma4mu3 = [
                0.1645149962396737,
                0.1649883278192336,
                0.1650799499000522,
                0.1647829107046865,
                0.1641196734157833,
                0.1631396190325236,
                0.1619137693857513,
                0.1605277211002943,
                0.1590739780915779,
                0.1576447545513027,
                0.1563259865519469,
                0.1551928807693,
                0.1543069688718685,
                0.1537143975942025,
                0.1534450830039811,
                0.153512371401416,
                0.1539129428053762,
                0.1546268317580187,
                0.1556175970205234,
                0.1568328242161698,
                0.1582052699021207,
                0.1596550218037594,
                0.1610930218642459,
                0.1624261437395218,
                0.1635637247616781,
                0.1644250606716317,
                0.164946974782812,
                0.1650903103164443,
                0.1648441971911098,
                0.164227268900565,
                0.1632855851207993,
                0.1620876747816936,
                0.1607176400562902,
                0.159267501692892,
                0.1578298884029928,
                0.1564918602756604,
                0.1553302484970645,
                0.1544085216540967,
                0.153774932272041,
                0.1534615782210751,
                0.1534840141895833,
                0.1538411334819762,
                0.15451517489104,
                0.1554718651773017,
                0.1566608620206428,
                0.1580167920238164,
                0.1594612543237677,
                0.1609061469209077,
                0.1622585359596468,
                0.1634270138307366,
                0.1643291093274098,
                0.1648989096974721,
                0.1650937653457782,
                0.1648989096974721,
                0.1643291093274098,
                0.1634270138307366,
                0.1622585359596468,
                0.1609061469209077,
                0.1594612543237677,
                0.1580167920238164,
                0.1566608620206428,
                0.1554718651773017,
                0.15451517489104,
                0.1538411334819762,
                0.1534840141895833,
                0.1534615782210751,
                0.153774932272041,
                0.1544085216540967,
                0.1553302484970645,
                0.1564918602756604,
                0.1578298884029928,
                0.159267501692892,
                0.1607176400562902,
                0.1620876747816936,
                0.1632855851207993,
                0.164227268900565,
                0.1648441971911098,
                0.1650903103164443,
                0.164946974782812,
                0.1644250606716317,
                0.1635637247616781,
            ];
            ddouble[] expected_dist_gamma1mum1 = [
                0.07621149402743287,
                0.08048408317135959,
                0.08719394423603079,
                0.09697029678279283,
                0.1107670380049642,
                0.1299526591807115,
                0.156328982563103,
                0.1918041734585938,
                0.2370048188396328,
                0.2877195451916826,
                0.3301701452543595,
                0.3440550751829124,
                0.3208710905283194,
                0.2742958072211317,
                0.2241570525321926,
                0.1814160597379821,
                0.1485122591241537,
                0.1242389588036257,
                0.1066432477475605,
                0.09402879363019405,
                0.08514454129251003,
                0.07913179660045992,
                0.07543305657405537,
                0.0737183978374542,
                0.07383879951044837,
                0.07580463919728234,
                0.07978719572882567,
                0.08614333325844255,
                0.09546572913549721,
                0.1086598378634381,
                0.1270349531807664,
                0.1523419416488581,
                0.1865208627835963,
                0.2305163632994147,
                0.2810512707780926,
                0.3257565898407422,
                0.344403882417088,
                0.3257565898407422,
                0.2810512707780926,
                0.2305163632994147,
                0.1865208627835963,
                0.1523419416488581,
                0.1270349531807664,
                0.1086598378634381,
                0.09546572913549721,
                0.08614333325844255,
                0.07978719572882567,
                0.07580463919728234,
                0.07383879951044837,
                0.0737183978374542,
                0.07543305657405537,
                0.07913179660045992,
                0.08514454129251003,
                0.09402879363019405,
                0.1066432477475605,
                0.1242389588036257,
                0.1485122591241537,
                0.1814160597379821,
                0.2241570525321926,
                0.2742958072211317,
                0.3208710905283194,
                0.3440550751829124,
                0.3301701452543595,
                0.2877195451916826,
                0.2370048188396328,
                0.1918041734585938,
                0.156328982563103,
                0.1299526591807115,
                0.1107670380049642,
                0.09697029678279283,
                0.08719394423603079,
                0.08048408317135959,
                0.07621149402743287,
                0.07399149049481862,
                0.07363010475088222,
                0.0750961777778628,
                0.0785168478869725,
                0.08419591597135385,
                0.09265701564362987,
                0.1047137506272117,
                0.121560120218763,
            ];

            foreach ((CircularCauchyDistribution dist, ddouble[] expecteds) in new[]{
                (dist_gamma1mu1,  expected_dist_gamma1mu1),
                (dist_gamma2mu1,  expected_dist_gamma2mu1),
                (dist_gamma4mu2,  expected_dist_gamma4mu2),
                (dist_gamma4mu3,  expected_dist_gamma4mu3),
                (dist_gamma1mum1, expected_dist_gamma1mum1),
            }) {
                for ((double x, int i) = (-10, 0); i < expecteds.Length; x += 0.25, i++) {
                    ddouble expected = expecteds[i];
                    ddouble actual = dist.PDF(x);

                    Console.WriteLine($"{dist} pdf({x})");
                    Console.WriteLine(expected);
                    Console.WriteLine(actual);

                    if (expected > 0) {
                        Assert.IsTrue(ddouble.Abs(expected - actual) / expected < 1e-10, $"{dist} pdf({x})\n{expected}\n{actual}");
                    }
                    else {
                        Assert.AreEqual(0, actual);
                    }
                }
            }
        }
    }
}