using DoubleDouble;
using DoubleDoubleStatistic.DirectionalDistributions;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace DoubleDoubleStatisticTest.DirectionalDistributions {
    [TestClass()]
    public class SphereUniformDistributionTests {
        readonly SphereUniformDistribution dist = new();

        SphereUniformDistribution[] Dists => [
            dist,
        ];

        [TestMethod()]
        public void InfoTest() {
            foreach (SphereUniformDistribution dist in Dists) {
                Console.WriteLine(dist);
                Console.WriteLine($"Mean={dist.Mean}");
                Console.WriteLine($"Mode={dist.Mode}");
                Console.WriteLine($"Variance={dist.Variance}");
                Console.WriteLine($"Skewness={dist.Skewness}");
                //Console.WriteLine($"Kurtosis={dist.Kurtosis}");
                Console.WriteLine($"Entropy={dist.Entropy}");
                Console.WriteLine(dist.Formula);
            }
        }

        [TestMethod()]
        public void VarianceTest() {
            Assert.AreEqual(1, (double)dist.Variance, 1e-10);
        }

        [TestMethod()]
        public void SkewnessTest() {
            Assert.AreEqual(0, (double)dist.Skewness, 1e-10);
        }

        [TestMethod()]
        public void KurtosisTest() {
            Assert.Inconclusive();

            Assert.AreEqual(0, (double)dist.Kurtosis, 1e-10);
        }

        [TestMethod()]
        public void EntropyTest() {
            Assert.AreEqual(2.531024246969288, (double)dist.Entropy, 1e-10);
        }

        [TestMethod()]
        public void PDFTest() {
            foreach (SphereUniformDistribution dist in Dists) {
                Console.WriteLine(dist);
                for (int z = -4; z <= 4; z++) {
                    for (int y = -4; y <= 4; y++) {
                        for (int x = -4; x <= 4; x++) {
                            ddouble pdf = dist.PDF((x, y, z));

                            Console.WriteLine($"pdf({x},{y},{z})={pdf}");
                        }
                    }
                }
            }
        }

        [TestMethod()]
        public void RandomGenerateTest() {
            Random random = new(1234);

            foreach (SphereUniformDistribution dist in Dists) {
                (double, double, double)[] samples = dist.Sample(random, count: 100000).ToArray();

                VonMisesFisherDistribution? dist_fit = VonMisesFisherDistribution.Fit(samples);

                Assert.IsNotNull(dist_fit);

                Console.WriteLine(dist_fit);

                Assert.AreEqual(0, (double)dist_fit.Kappa, 0.05, $"{dist},kappa");
            }
        }

        [TestMethod()]
        public void PDFExpectedTest() {
            ddouble[] expected_dist = [
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                double.NaN,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
                7.957747154594788097e-02,
            ];
            foreach ((SphereUniformDistribution dist, ddouble[] expecteds) in new[]{
                (dist,  expected_dist),
            }) {
                for (int z = -3, i = 0; z <= 3; z++) {
                    for (int y = -3; y <= 3; y++) {
                        for (int x = -3; x <= 3; x++, i++) {
                            ddouble expected = expecteds[i];
                            ddouble actual = dist.PDF((x, y, z));

                            Console.WriteLine($"{dist} pdf({x},{y},{z})");
                            Console.WriteLine(expected);
                            Console.WriteLine(actual);

                            if (x == 0 && y == 0 && z == 0) {
                                Assert.IsTrue(ddouble.IsNaN(actual));
                                continue;
                            }

                            if (expected > 0) {
                                Assert.IsTrue(ddouble.Abs(expected - actual) / expected < 1e-10, $"{dist} pdf({x},{y},{z})\n{expected}\n{actual}");
                            }
                            else {
                                Assert.AreEqual(0, actual);
                            }
                        }
                    }
                }
            }
        }
    }
}