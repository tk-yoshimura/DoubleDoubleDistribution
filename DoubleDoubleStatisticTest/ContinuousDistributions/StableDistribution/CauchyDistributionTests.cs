using DoubleDouble;
using DoubleDoubleStatistic;
using DoubleDoubleStatistic.ContinuousDistributions;
using DoubleDoubleStatistic.SampleStatistic;
using DoubleDoubleStatistic.Utils;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace DoubleDoubleStatisticTest.ContinuousDistributions.StableDistribution {
    [TestClass()]
    public class CauchyDistributionTests {
        readonly CauchyDistribution dist1 = new();
        readonly CauchyDistribution dist2 = new(mu: 1, gamma: 3);

        CauchyDistribution[] Dists => [
            dist1,
            dist2,
        ];

        [TestMethod()]
        public void InfoTest() {
            foreach (CauchyDistribution dist in Dists) {
                Console.WriteLine(dist);
                Console.WriteLine($"Support={dist.Support}");
                Console.WriteLine($"Mu={dist.Mu}");
                Console.WriteLine($"Gamma={dist.Gamma}");
                Console.WriteLine($"Mean={dist.Mean}");
                Console.WriteLine($"Median={dist.Median}");
                Console.WriteLine($"Mode={dist.Mode}");
                Console.WriteLine($"Variance={dist.Variance}");
                Console.WriteLine($"Skewness={dist.Skewness}");
                Console.WriteLine($"Kurtosis={dist.Kurtosis}");
                Console.WriteLine($"Entropy={dist.Entropy}");
                Console.WriteLine(dist.Formula);
            }
        }

        [TestMethod()]
        public void ModeTest() {
            foreach (CauchyDistribution dist in Dists) {
                Console.WriteLine(dist);

                if (ddouble.IsNaN(dist.Mode)) {
                    continue;
                }

                Assert.IsTrue(dist.PDF(dist.Mode) > dist.PDF(dist.Mode - 1e-4), $"{dist}\n{dist.Mode}");
                Assert.IsTrue(dist.PDF(dist.Mode) > dist.PDF(dist.Mode + 1e-4), $"{dist}\n{dist.Mode}");
            }
        }

        [TestMethod()]
        public void MedianTest() {
            foreach (CauchyDistribution dist in Dists) {
                Console.WriteLine(dist);

                Assert.IsTrue(ddouble.Abs(dist.CDF(dist.Median) - 0.5) < 1e-20, $"{dist}\n{dist.Median}");
            }
        }

        [TestMethod()]
        public void EntropyTest() {
            foreach (CauchyDistribution dist in Dists) {
                Console.WriteLine(dist);

                ddouble actual = dist.Entropy;
                ddouble expected = IntegrationStatistics.Entropy(dist, eps: 1e-28, discontinue_eval_points: 65536);
                Assert.IsTrue(ddouble.Abs(actual - expected) < 1e-20, $"{dist}\n{expected}\n{actual}");
            }
        }

        [TestMethod()]
        public void PDFTest() {
            foreach (CauchyDistribution dist in Dists) {
                Console.WriteLine(dist);
                for (ddouble x = -4; x <= 4; x += 0.125) {
                    ddouble pdf = dist.PDF(x);

                    Console.WriteLine($"pdf({x})={pdf}");
                }
            }
        }

        [TestMethod()]
        public void CDFLowerTest() {
            foreach (CauchyDistribution dist in Dists) {
                Console.WriteLine(dist);
                for (ddouble x = -4; x <= 4; x += 0.125) {
                    ddouble cdf = dist.CDF(x, Interval.Lower);

                    Console.WriteLine($"cdf({x})={cdf}");
                }
            }
        }

        [TestMethod()]
        public void CDFUpperTest() {
            foreach (CauchyDistribution dist in Dists) {
                Console.WriteLine(dist);
                for (ddouble x = -4; x <= 4; x += 0.125) {
                    ddouble cdf = dist.CDF(x, Interval.Lower);
                    ddouble ccdf = dist.CDF(x, Interval.Upper);

                    Console.WriteLine($"ccdf({x})={ccdf}");

                    Assert.IsTrue(ddouble.Abs(cdf + ccdf - 1) < 1e-28);
                }
            }
        }

        [TestMethod()]
        public void QuantileLowerTest() {
            foreach (CauchyDistribution dist in Dists) {
                Console.WriteLine(dist);
                for (int i = 0; i <= 10; i++) {
                    ddouble p = (ddouble)i / 10;
                    ddouble x = dist.Quantile(p, Interval.Lower);
                    ddouble cdf = dist.CDF(x, Interval.Lower);

                    Console.WriteLine($"quantile({p})={x}, cdf({x})={cdf}");

                    if (ddouble.IsFinite(x)) {
                        Assert.IsTrue(ddouble.Abs(p - cdf) < 1e-28);
                    }
                }
            }
        }

        [TestMethod()]
        public void QuantileUpperTest() {
            foreach (CauchyDistribution dist in Dists) {
                Console.WriteLine(dist);
                for (int i = 0; i <= 10; i++) {
                    ddouble p = (ddouble)i / 10;
                    ddouble x = dist.Quantile(p, Interval.Upper);
                    ddouble ccdf = dist.CDF(x, Interval.Upper);

                    Console.WriteLine($"cquantile({p})={x}, ccdf({x})={ccdf}");

                    if (ddouble.IsFinite(x)) {
                        Assert.IsTrue(ddouble.Abs(p - ccdf) < 1e-28);
                    }
                }
            }
        }

        [TestMethod()]
        public void RandomGenerateTest() {
            Random random = new(1234);

            foreach (CauchyDistribution dist in Dists) {

                Console.WriteLine(dist);

                double[] xs = dist.Sample(random, 100000).ToArray();

                double max_error = 0d;

                for (int i = 5; i <= 90; i++) {
                    double p = (double)i / 100;
                    double expected = (double)dist.Quantile(p, Interval.Lower);
                    double actual = xs.Quantile((double)p);

                    max_error = double.Max(max_error, double.Abs(expected - actual));

                    Assert.AreEqual(expected, actual, (double.Abs(expected) + 2) * 0.04, $"{p}\n{expected}\n{actual}");
                }

                Console.WriteLine(max_error);
            }
        }

        [TestMethod()]
        public void FitTest() {
            Random random = new(1234);

            foreach (CauchyDistribution dist in Dists) {

                Console.WriteLine(dist);

                double[] xs = dist.Sample(random, 10000).ToArray();

                (CauchyDistribution? dist_fit, ddouble error) = CauchyDistribution.Fit(xs, (0.1, 0.9));

                Assert.IsNotNull(dist_fit);

                Console.WriteLine(dist_fit);
                Console.WriteLine(error);

                Assert.IsTrue(error < 1e-2);
            }
        }

        [TestMethod()]
        public void IrregularValueTest() {
            foreach (CauchyDistribution dist in Dists) {
                Console.WriteLine(dist);

                Assert.IsTrue(ddouble.IsFinite(dist.PDF(ddouble.NegativeInfinity)) && dist.PDF(ddouble.NegativeInfinity) >= 0d, "pdf(-inf)");
                Assert.IsTrue(ddouble.IsFinite(dist.PDF(ddouble.MinValue)) && dist.PDF(ddouble.MinValue) >= 0d, "pdf(-lval)");
                Assert.IsTrue(ddouble.IsFinite(dist.PDF(ddouble.MinValue / 2)) && dist.PDF(ddouble.MinValue / 2) >= 0d, "pdf(-lval / 2)");

                Assert.IsTrue(ddouble.IsFinite(dist.PDF(ddouble.PositiveInfinity)) && dist.PDF(ddouble.PositiveInfinity) >= 0d, "pdf(+inf)");
                Assert.IsTrue(ddouble.IsFinite(dist.PDF(ddouble.MaxValue)) && dist.PDF(ddouble.MaxValue) >= 0d, "pdf(+lval)");
                Assert.IsTrue(ddouble.IsFinite(dist.PDF(ddouble.MaxValue / 2)) && dist.PDF(ddouble.MaxValue / 2) >= 0d, "pdf(+lval / 2)");

                Assert.IsTrue(ddouble.IsNaN(dist.PDF(ddouble.NaN)), "pdf(NaN)");

                Assert.IsTrue(dist.CDF(ddouble.NegativeInfinity, Interval.Lower) == 0d, "cdf(-inf)");
                Assert.IsTrue(ddouble.IsFinite(dist.CDF(ddouble.MinValue, Interval.Lower)) && dist.CDF(ddouble.MinValue, Interval.Lower) >= 0d, "cdf(-lval)");
                Assert.IsTrue(ddouble.IsFinite(dist.CDF(ddouble.MinValue / 2, Interval.Lower)) && dist.CDF(ddouble.MinValue / 2, Interval.Lower) >= 0d, "cdf(-lval / 2)");

                Assert.IsTrue(dist.CDF(ddouble.PositiveInfinity, Interval.Lower) == 1d, "cdf(+inf)");
                Assert.IsTrue(ddouble.IsFinite(dist.CDF(ddouble.MaxValue, Interval.Lower)) && dist.CDF(ddouble.MaxValue, Interval.Lower) <= 1d, "cdf(+lval)");
                Assert.IsTrue(ddouble.IsFinite(dist.CDF(ddouble.MaxValue / 2, Interval.Lower)) && dist.CDF(ddouble.MaxValue / 2, Interval.Lower) <= 1d, "cdf(+lval / 2)");

                Assert.IsTrue(ddouble.IsNaN(dist.CDF(ddouble.NaN, Interval.Lower)), "cdf(NaN)");

                Assert.IsTrue(dist.CDF(ddouble.NegativeInfinity, Interval.Upper) == 1d, "ccdf(-inf)");
                Assert.IsTrue(ddouble.IsFinite(dist.CDF(ddouble.MinValue, Interval.Upper)) && dist.CDF(ddouble.MinValue, Interval.Upper) <= 1d, "ccdf(-lval)");
                Assert.IsTrue(ddouble.IsFinite(dist.CDF(ddouble.MinValue / 2, Interval.Upper)) && dist.CDF(ddouble.MinValue / 2, Interval.Upper) <= 1d, "ccdf(-lval / 2)");

                Assert.IsTrue(dist.CDF(ddouble.PositiveInfinity, Interval.Upper) == 0d, "cdf(+inf)");
                Assert.IsTrue(ddouble.IsFinite(dist.CDF(ddouble.MaxValue, Interval.Upper)) && dist.CDF(ddouble.MaxValue, Interval.Upper) >= 0d, "ccdf(+lval)");
                Assert.IsTrue(ddouble.IsFinite(dist.CDF(ddouble.MaxValue / 2, Interval.Upper)) && dist.CDF(ddouble.MaxValue / 2, Interval.Upper) >= 0d, "ccdf(+lval / 2)");

                Assert.IsTrue(ddouble.IsNaN(dist.CDF(ddouble.NaN, Interval.Upper)), "ccdf(NaN)");

                Assert.IsTrue(ddouble.IsFinite(dist.Quantile(0d, Interval.Lower)) || ddouble.IsNegativeInfinity(dist.Quantile(0d, Interval.Lower)), "quantile(0)");
                Assert.IsTrue(ddouble.IsFinite(dist.Quantile(1d, Interval.Lower)) || ddouble.IsPositiveInfinity(dist.Quantile(1d, Interval.Lower)), "quantile(1)");

                Assert.IsTrue(ddouble.IsFinite(dist.Quantile(0d, Interval.Upper)) || ddouble.IsPositiveInfinity(dist.Quantile(0d, Interval.Upper)), "cquantile(0)");
                Assert.IsTrue(ddouble.IsFinite(dist.Quantile(1d, Interval.Upper)) || ddouble.IsNegativeInfinity(dist.Quantile(1d, Interval.Upper)), "cquantile(1)");

                Assert.IsTrue(ddouble.IsFinite(dist.Quantile(ddouble.Epsilon, Interval.Lower)) || ddouble.IsNegativeInfinity(dist.Quantile(ddouble.Epsilon, Interval.Lower)), "quantile(0+eps)");
                Assert.IsTrue(ddouble.IsFinite(dist.Quantile(ddouble.One - ddouble.Epsilon, Interval.Lower)) || ddouble.IsPositiveInfinity(dist.Quantile(ddouble.One - ddouble.Epsilon, Interval.Lower)), "quantile(1-eps)");

                Assert.IsTrue(ddouble.IsFinite(dist.Quantile(ddouble.Epsilon, Interval.Upper)) || ddouble.IsPositiveInfinity(dist.Quantile(ddouble.Epsilon, Interval.Upper)), "cquantile(0+eps)");
                Assert.IsTrue(ddouble.IsFinite(dist.Quantile(ddouble.One - ddouble.Epsilon, Interval.Upper)) || ddouble.IsNegativeInfinity(dist.Quantile(ddouble.One - ddouble.Epsilon, Interval.Upper)), "cquantile(1-eps)");
            }
        }

        [TestMethod()]
        public void PDFExpectedTest() {
            ddouble[] expected_dist1 = [
                "0.01872411095198768656104514863206051318052",
                "0.02402338763651250351228434164113424332596",
                "0.03183098861837906715377675267450287240689",
                "0.04390481188741940297072655541310741021640",
                "0.06366197723675813430755350534900574481378",
                "0.09794150344116636047315923899847037663659",
                "0.1591549430918953357688837633725143620345",
                "0.2546479089470325372302140213960229792551",
                "0.3183098861837906715377675267450287240689",
                "0.2546479089470325372302140213960229792551",
                "0.1591549430918953357688837633725143620345",
                "0.09794150344116636047315923899847037663659",
                "0.06366197723675813430755350534900574481378",
                "0.04390481188741940297072655541310741021640",
                "0.03183098861837906715377675267450287240689",
                "0.02402338763651250351228434164113424332596",
                "0.01872411095198768656104514863206051318052"
            ];
            ddouble[] expected_dist2 = [
                "0.02808616642798152984156772294809076977079",
                "0.03264716781372212015771974633282345887886",
                "0.03819718634205488058453210320940344688827",
                "0.04493786628477044774650835671694523163326",
                "0.05305164769729844525629458779083812067815",
                "0.06261833826566373866316738231049745391520",
                "0.07345612758087477035486942924885278247744",
                "0.08488263631567751241007134046534099308505",
                "0.09549296585513720146133025802350861722068",
                "0.1032356387623104880663029816470363429413",
                "0.1061032953945968905125891755816762413563",
                "0.1032356387623104880663029816470363429413",
                "0.09549296585513720146133025802350861722068",
                "0.08488263631567751241007134046534099308505",
                "0.07345612758087477035486942924885278247744",
                "0.06261833826566373866316738231049745391520",
                "0.05305164769729844525629458779083812067815"
            ];

            foreach ((CauchyDistribution dist, ddouble[] expecteds) in new[]{
                (dist1, expected_dist1), (dist2, expected_dist2)
            }) {
                for ((ddouble x, int i) = (-4, 0); i < expecteds.Length; x += 0.5, i++) {
                    ddouble expected = expecteds[i];
                    ddouble actual = dist.PDF(x);

                    Console.WriteLine($"{dist} pdf({x})");
                    Console.WriteLine(expected);
                    Console.WriteLine(actual);

                    Assert.IsTrue(ddouble.Abs(expected - actual) / expected < 1e-30, $"{dist} pdf({x})\n{expected}\n{actual}");
                }
            }
        }

        [TestMethod()]
        public void CDFExpectedTest() {
            ddouble[] expected_dist1 = [
                "0.07797913037736932546051288977313013511652",
                "0.08858553278290474887587605290700607921396",
                "0.1024163823495667258245989237752594740489",
                "0.1211189415908433987235825893719092475981",
                "0.1475836176504332741754010762247405259511",
                "0.1871670418109988161862527475647785523348",
                "0.2500000000000000000000000000000000000000",
                "0.3524163823495667258245989237752594740489",
                "0.5000000000000000000000000000000000000000",
                "0.6475836176504332741754010762247405259511",
                "0.7500000000000000000000000000000000000000",
                "0.8128329581890011838137472524352214476652",
                "0.8524163823495667258245989237752594740489",
                "0.8788810584091566012764174106280907524019",
                "0.8975836176504332741754010762247405259511",
                "0.9114144672170952511241239470929939207860",
                "0.9220208696226306745394871102268698648835"
            ];
            ddouble[] expected_dist2 = [
                "0.1720208696226306745394871102268698648835",
                "0.1871670418109988161862527475647785523348",
                "0.2048327646991334516491978475505189480977",
                "0.2255627480278025996359139659978706610677",
                "0.2500000000000000000000000000000000000000",
                "0.2788579383763044777428917232261243353092",
                "0.3128329581890011838137472524352214476652",
                "0.3524163823495667258245989237752594740489",
                "0.3975836176504332741754010762247405259511",
                "0.4474315432887465700492218303236554454681",
                "0.5000000000000000000000000000000000000000",
                "0.5525684567112534299507781696763445545319",
                "0.6024163823495667258245989237752594740489",
                "0.6475836176504332741754010762247405259511",
                "0.6871670418109988161862527475647785523348",
                "0.7211420616236955222571082767738756646908",
                "0.7500000000000000000000000000000000000000"
            ];

            foreach ((CauchyDistribution dist, ddouble[] expecteds) in new[]{
                (dist1, expected_dist1), (dist2, expected_dist2)
            }) {
                for ((ddouble x, int i) = (-4, 0); i < expecteds.Length; x += 0.5, i++) {
                    ddouble expected = expecteds[i];
                    ddouble actual = dist.CDF(x);

                    Console.WriteLine($"{dist} cdf({x})");
                    Console.WriteLine(expected);
                    Console.WriteLine(actual);

                    Assert.IsTrue(ddouble.Abs(expected - actual) / expected < 1e-30, $"{dist} cdf({x})\n{expected}\n{actual}");
                }
            }
        }

        [TestMethod()]
        public void CDFLimitTest() {
            ddouble[] expected_dist1 = [
               "2.5000000000000000000000000000000000000000e-1",
                "1.4758361765043327417540107622474052595113e-1",
                "7.7979130377369325460512889773130135116525e-2",
                "3.9583424160565542010851671340038026383623e-2",
                "1.9868524305540839059359882858104559239581e-2",
                "9.9439478235892739286124987559949706675355e-3",
                "4.9731872789504128535623156837751800756023e-3",
                "2.4867453936697392949686323634656804594952e-3",
                "1.2433916687141004173529641246144055092827e-3",
                "6.2169820592337159597486553908180549310616e-4",
                "3.1084939941002037874680074669017744271334e-4",
                "1.5542473676113152555099510687127632326412e-4",
                "7.7712373012583414603820198468663804610367e-5",
                "3.8856187085293991430693851598977935191034e-5",
                "1.9428093615022283658015408559808897727576e-5",
                "9.7140468165580528976715963565423783044063e-6",
                "4.8570234094098903347884825792915884445804e-6",
                "2.4285117048463031532123798990748351907138e-6",
                "1.2142558524408213248357714338207347064015e-6",
                "6.0712792622261938094665571988656529953784e-7",
                "3.0356396311158578028942637023533196391141e-7",
                "1.5178198155582740137172556952667291478519e-7",
                "7.5890990777918014589239335021415473019475e-8",
                "3.7945495388959546532541736361934899370117e-8",
                "1.8972747694479840671011126789526072727201e-8",
                "9.4863738472399287610980957209002151090117e-9",
                "4.7431869236199654337481144012193596122180e-9",
                "2.3715934618099828485239405182059020856523e-9",
                "1.1857967309049914407182056738024808831543e-9",
                "5.9289836545249572241613226373868173584898e-10",
                "2.9644918272624786146519481022402103171568e-10",
                "1.4822459136312393076473848990634553639446e-10",
                "7.4112295681561965386386880552464645766270e-11",
                "3.7056147840780982693695644726143807579326e-11",
                "1.8528073920390491346910597919310839376689e-11",
                "9.2640369601952456734631459041852866367226e-12",
                "4.6320184800976228367325538201588766869086e-12",
                "2.3160092400488114183663995185877175145227e-12",
                "1.1580046200244057091832150853573936536449e-12",
                "5.7900231001220285459160945843663868887040e-13",
                "2.8950115500610142729580496868806207719119e-13",
                "1.4475057750305071364790251427774888019010e-13",
                "7.2375288751525356823951260880589170294360e-14",
                "3.6187644375762678411975630908008926422094e-14",
                "1.8093822187881339205987815512468755870411e-14",
                "9.0469110939406696029939077635424145176262e-15",
                "4.5234555469703348014969538826847118316156e-15",
                "2.2617277734851674007484769414565439874081e-15",
                "1.1308638867425837003742384707425455026541e-15",
                "5.6543194337129185018711923537305693994581e-16",
                "2.8271597168564592509355961768675149355025e-16",
                "1.4135798584282296254677980884340362472229e-16",
                "7.0678992921411481273389904421705297104543e-17",
                "3.5339496460705740636694952210853084145196e-17",
                "1.7669748230352870318347476105426596521713e-17",
                "8.8348741151764351591737380527133050669962e-18",
                "4.4174370575882175795868690263566533842655e-18",
                "2.2087185287941087897934345131783267984787e-18",
                "1.1043592643970543948967172565891634125326e-18",
                "5.5217963219852719744835862829458170792795e-19",
                "2.7608981609926359872417931414729085417168e-19",
                "1.3804490804963179936208965707364542711180e-19",
                "6.9022454024815899681044828536822713559147e-20",
                "3.4511227012407949840522414268411356779979e-20",
                "1.7255613506203974920261207134205678390040e-20",
                "8.6278067531019874601306035671028391950265e-21",
                "4.3139033765509937300653017835514195975141e-21",
                "2.1569516882754968650326508917757097987571e-21",
                "1.0784758441377484325163254458878548993786e-21",
                "5.3923792206887421625816272294392744968929e-22",
                "2.6961896103443710812908136147196372484464e-22",
                "1.3480948051721855406454068073598186242232e-22",
                "6.7404740258609277032270340367990931211161e-23",
                "3.3702370129304638516135170183995465605581e-23",
                "1.6851185064652319258067585091997732802790e-23",
                "8.4255925323261596290337925459988664013951e-24",
                "4.2127962661630798145168962729994332006976e-24",
                "2.1063981330815399072584481364997166003488e-24",
                "1.0531990665407699536292240682498583001744e-24",
                "5.2659953327038497681461203412492915008720e-25",
                "2.6329976663519248840730601706246457504360e-25",
                "1.3164988331759624420365300853123228752180e-25",
                "6.5824941658798122101826504265616143760900e-26",
                "3.2912470829399061050913252132808071880450e-26",
                "1.6456235414699530525456626066404035940225e-26",
                "8.2281177073497652627283130332020179701124e-27",
                "4.1140588536748826313641565166010089850562e-27",
                "2.0570294268374413156820782583005044925281e-27",
                "1.0285147134187206578410391291502522462641e-27",
                "5.1425735670936032892051956457512612313203e-28",
                "2.5712867835468016446025978228756306156601e-28",
                "1.2856433917734008223012989114378153078301e-28",
                "6.4282169588670041115064945571890765391503e-29",
                "3.2141084794335020557532472785945382695752e-29",
                "1.6070542397167510278766236392972691347876e-29",
                "8.0352711985837551393831181964863456739379e-30",
                "4.0176355992918775696915590982431728369690e-30",
                "2.0088177996459387848457795491215864184845e-30",
                "1.0044088998229693924228897745607932092422e-30",
                "5.0220444991148469621144488728039660462112e-31",
                "2.5110222495574234810572244364019830231056e-31",
                "1.2555111247787117405286122182009915115528e-31",
                "6.2775556238935587026430610910049575577640e-32",
                "3.1387778119467793513215305455024787788820e-32",
                "1.5693889059733896756607652727512393894410e-32",
                "7.8469445298669483783038263637561969472050e-33",
                "3.9234722649334741891519131818780984736025e-33",
                "1.9617361324667370945759565909390492368013e-33",
                "9.8086806623336854728797829546952461840063e-34",
                "4.9043403311668427364398914773476230920031e-34",
                "2.4521701655834213682199457386738115460016e-34",
                "1.2260850827917106841099728693369057730008e-34",
                "6.1304254139585534205498643466845288650039e-35",
                "3.0652127069792767102749321733422644325020e-35",
                "1.5326063534896383551374660866711322162510e-35",
                "7.6630317674481917756873304333556610812549e-36",
                "3.8315158837240958878436652166778305406274e-36",
                "1.9157579418620479439218326083389152703137e-36",
                "9.5787897093102397196091630416945763515686e-37",
                "4.7893948546551198598045815208472881757843e-37",
                "2.3946974273275599299022907604236440878922e-37",
                "1.1973487136637799649511453802118220439461e-37",
                "5.9867435683188998247557269010591102197304e-38",
                "2.9933717841594499123778634505295551098652e-38",
                "1.4966858920797249561889317252647775549326e-38",
                "7.4834294603986247809446586263238877746630e-39",
                "3.7417147301993123904723293131619438873315e-39",
                "1.8708573650996561952361646565809719436657e-39",
                "9.3542868254982809761808232829048597183287e-40",
                "4.6771434127491404880904116414524298591644e-40",
                "2.3385717063745702440452058207262149295822e-40",
                "1.1692858531872851220226029103631074647911e-40",
                "5.8464292659364256101130145518155373239555e-41",
                "2.9232146329682128050565072759077686619777e-41",
                "1.4616073164841064025282536379538843309889e-41",
                "7.3080365824205320126412681897694216549443e-42",
                "3.6540182912102660063206340948847108274722e-42",
                "1.8270091456051330031603170474423554137361e-42",
                "9.1350457280256650158015852372117770686804e-43",
                "4.5675228640128325079007926186058885343402e-43",
                "2.2837614320064162539503963093029442671701e-43",
                "1.1418807160032081269751981546514721335851e-43",
                "5.7094035800160406348759907732573606679253e-44",
                "2.8547017900080203174379953866286803339626e-44",
                "1.4273508950040101587189976933143401669813e-44",
                "7.1367544750200507935949884665717008349066e-45",
                "3.5683772375100253967974942332858504174533e-45",
                "1.7841886187550126983987471166429252087266e-45",
                "8.9209430937750634919937355832146260436332e-46",
                "4.4604715468875317459968677916073130218166e-46",
                "2.2302357734437658729984338958036565109083e-46",
                "1.1151178867218829364992169479018282554542e-46",
                "5.5755894336094146824960847395091412772708e-47",
                "2.7877947168047073412480423697545706386354e-47",
                "1.3938973584023536706240211848772853193177e-47",
                "6.9694867920117683531201059243864265965884e-48",
                "3.4847433960058841765600529621932132982942e-48",
                "1.7423716980029420882800264810966066491471e-48",
                "8.7118584900147104414001324054830332457356e-49",
                "4.3559292450073552207000662027415166228678e-49",
                "2.1779646225036776103500331013707583114339e-49",
                "1.0889823112518388051750165506853791557169e-49",
                "5.4449115562591940258750827534268957785847e-50",
                "2.7224557781295970129375413767134478892924e-50",
                "1.3612278890647985064687706883567239446462e-50",
                "6.8061394453239925323438534417836197232309e-51",
                "3.4030697226619962661719267208918098616155e-51",
                "1.7015348613309981330859633604459049308077e-51",
                "8.5076743066549906654298168022295246540386e-52",
                "4.2538371533274953327149084011147623270193e-52",
                "2.1269185766637476663574542005573811635097e-52",
                "1.0634592883318738331787271002786905817548e-52",
                "5.3172964416593691658936355013934529087741e-53",
                "2.6586482208296845829468177506967264543871e-53",
                "1.3293241104148422914734088753483632271935e-53",
                "6.6466205520742114573670443767418161359677e-54",
                "3.3233102760371057286835221883709080679838e-54",
                "1.6616551380185528643417610941854540339919e-54",
                "8.3082756900927643217088054709272701699596e-55",
                "4.1541378450463821608544027354636350849798e-55",
                "2.0770689225231910804272013677318175424899e-55",
                "1.0385344612615955402136006838659087712449e-55",
                "5.1926723063079777010680034193295438562247e-56",
                "2.5963361531539888505340017096647719281124e-56",
                "1.2981680765769944252670008548323859640562e-56",
                "6.4908403828849721263350042741619298202809e-57",
                "3.2454201914424860631675021370809649101405e-57",
                "1.6227100957212430315837510685404824550702e-57",
                "8.1135504786062151579187553427024122753512e-58",
                "4.0567752393031075789593776713512061376756e-58",
                "2.0283876196515537894796888356756030688378e-58",
                "1.0141938098257768947398444178378015344189e-58",
                "5.0709690491288844736992220891890076720945e-59",
                "2.5354845245644422368496110445945038360472e-59",
                "1.2677422622822211184248055222972519180236e-59",
                "6.3387113114111055921240276114862595901181e-60",
                "3.1693556557055527960620138057431297950591e-60",
                "1.5846778278527763980310069028715648975295e-60",
                "7.9233891392638819901550345143578244876476e-61",
                "3.9616945696319409950775172571789122438238e-61",
                "1.9808472848159704975387586285894561219119e-61",
                "9.9042364240798524876937931429472806095595e-62",
                "4.9521182120399262438468965714736403047798e-62",
                "2.4760591060199631219234482857368201523899e-62",
                "1.2380295530099815609617241428684100761949e-62",
                "6.1901477650499078048086207143420503809747e-63",
                "3.0950738825249539024043103571710251904874e-63",
                "1.5475369412624769512021551785855125952437e-63",
                "7.7376847063123847560107758929275629762184e-64",
                "3.8688423531561923780053879464637814881092e-64",
                "1.9344211765780961890026939732318907440546e-64",
                "9.6721058828904809450134698661594537202730e-65",
                "4.8360529414452404725067349330797268601365e-65",
                "2.4180264707226202362533674665398634300682e-65",
                "1.2090132353613101181266837332699317150341e-65",
                "6.0450661768065505906334186663496585751706e-66",
                "3.0225330884032752953167093331748292875853e-66",
                "1.5112665442016376476583546665874146437927e-66",
                "7.5563327210081882382917733329370732189633e-67",
                "3.7781663605040941191458866664685366094816e-67",
                "1.8890831802520470595729433332342683047408e-67",
                "9.4454159012602352978647166661713415237041e-68",
                "4.7227079506301176489323583330856707618520e-68",
                "2.3613539753150588244661791665428353809260e-68",
                "1.1806769876575294122330895832714176904630e-68",
                "5.9033849382876470611654479163570884523151e-69",
                "2.9516924691438235305827239581785442261575e-69",
                "1.4758462345719117652913619790892721130788e-69",
                "7.3792311728595588264568098954463605653938e-70",
                "3.6896155864297794132284049477231802826969e-70",
                "1.8448077932148897066142024738615901413485e-70",
                "9.2240389660744485330710123693079507067423e-71",
                "4.6120194830372242665355061846539753533711e-71",
                "2.3060097415186121332677530923269876766856e-71",
                "1.1530048707593060666338765461634938383428e-71",
                "5.7650243537965303331693827308174691917139e-72",
                "2.8825121768982651665846913654087345958570e-72",
                "1.4412560884491325832923456827043672979285e-72",
                "7.2062804422456629164617284135218364896424e-73",
                "3.6031402211228314582308642067609182448212e-73",
                "1.8015701105614157291154321033804591224106e-73",
                "9.0078505528070786455771605169022956120530e-74",
                "4.5039252764035393227885802584511478060265e-74",
                "2.2519626382017696613942901292255739030132e-74",
                "1.1259813191008848306971450646127869515066e-74",
                "5.6299065955044241534857253230639347575331e-75",
                "2.8149532977522120767428626615319673787666e-75",
                "1.4074766488761060383714313307659836893833e-75",
                "7.0373832443805301918571566538299184469164e-76",
                "3.5186916221902650959285783269149592234582e-76",
                "1.7593458110951325479642891634574796117291e-76",
                "8.7967290554756627398214458172873980586455e-77",
                "4.3983645277378313699107229086436990293228e-77",
                "2.1991822638689156849553614543218495146614e-77",
                "1.0995911319344578424776807271609247573307e-77",
                "5.4979556596722892123884036358046237866534e-78",
                "2.7489778298361446061942018179023118933267e-78",
                "1.3744889149180723030971009089511559466634e-78",
                "6.8724445745903615154855045447557797333168e-79",
                "3.4362222872951807577427522723778898666584e-79",
                "1.7181111436475903788713761361889449333292e-79",
                "8.5905557182379518943568806809447246666460e-80",
                "4.2952778591189759471784403404723623333230e-80",
                "2.1476389295594879735892201702361811666615e-80",
                "1.0738194647797439867946100851180905833307e-80",
                "5.3690973238987199339730504255904529166537e-81",
                "2.6845486619493599669865252127952264583269e-81",
                "1.3422743309746799834932626063976132291634e-81",
                "6.7113716548733999174663130319880661458172e-82",
                "3.3556858274366999587331565159940330729086e-82",
                "1.6778429137183499793665782579970165364543e-82",
                "8.3892145685917498968328912899850826822715e-83",
                "4.1946072842958749484164456449925413411357e-83",
                "2.0973036421479374742082228224962706705679e-83",
                "1.0486518210739687371041114112481353352839e-83",
                "5.2432591053698436855205570562406766764197e-84",
                "2.6216295526849218427602785281203383382098e-84",
                "1.3108147763424609213801392640601691691049e-84",
                "6.5540738817123046069006963203008458455246e-85",
                "3.2770369408561523034503481601504229227623e-85",
                "1.6385184704280761517251740800752114613811e-85",
                "8.1925923521403807586258704003760573069057e-86",
                "4.0962961760701903793129352001880286534529e-86",
                "2.0481480880350951896564676000940143267264e-86",
                "1.0240740440175475948282338000470071633632e-86",
                "5.1203702200877379741411690002350358168161e-87",
                "2.5601851100438689870705845001175179084080e-87",
                "1.2800925550219344935352922500587589542040e-87",
                "6.4004627751096724676764612502937947710201e-88",
                "3.2002313875548362338382306251468973855101e-88",
                "1.6001156937774181169191153125734486927550e-88",
                "8.0005784688870905845955765628672434637751e-89",
                "4.0002892344435452922977882814336217318876e-89",
                "2.0001446172217726461488941407168108659438e-89",
                "1.0000723086108863230744470703584054329719e-89",
                "5.0003615430544316153722353517920271648595e-90",
                "2.5001807715272158076861176758960135824297e-90",
                "1.2500903857636079038430588379480067912149e-90",
                "6.2504519288180395192152941897400339560743e-91",
                "3.1252259644090197596076470948700169780372e-91",
                "1.5626129822045098798038235474350084890186e-91",
                "7.8130649110225493990191177371750424450929e-92",
                "3.9065324555112746995095588685875212225465e-92",
                "1.9532662277556373497547794342937606112732e-92",
                "9.7663311387781867487738971714688030563661e-93",
                "4.8831655693890933743869485857344015281831e-93",
                "2.4415827846945466871934742928672007640915e-93",
                "1.2207913923472733435967371464336003820458e-93",
                "6.1039569617363667179836857321680019102288e-94",
                "3.0519784808681833589918428660840009551144e-94",
                "1.5259892404340916794959214330420004775572e-94",
                "7.6299462021704583974796071652100023877860e-95",
                "3.8149731010852291987398035826050011938930e-95",
                "1.9074865505426145993699017913025005969465e-95",
                "9.5374327527130729968495089565125029847326e-96",
                "4.7687163763565364984247544782562514923663e-96",
                "2.3843581881782682492123772391281257461831e-96",
                "1.1921790940891341246061886195640628730916e-96",
                "5.9608954704456706230309430978203143654578e-97",
                "2.9804477352228353115154715489101571827289e-97",
                "1.4902238676114176557577357744550785913645e-97",
                "7.4511193380570882787886788722753929568223e-98",
                "3.7255596690285441393943394361376964784112e-98",
                "1.8627798345142720696971697180688482392056e-98",
                "9.3138991725713603484858485903442411960279e-99",
                "4.6569495862856801742429242951721205980139e-99",
                "2.3284747931428400871214621475860602990070e-99",
                "1.1642373965714200435607310737930301495035e-99",
                "5.8211869828571002178036553689651507475174e-100",
                "2.9105934914285501089018276844825753737587e-100",
                "1.4552967457142750544509138422412876868794e-100",
                "7.2764837285713752722545692112064384343968e-101",
                "3.6382418642856876361272846056032192171984e-101",
                "1.8191209321428438180636423028016096085992e-101",
                "9.0956046607142190903182115140080480429960e-102",
                "4.5478023303571095451591057570040240214980e-102",
                "2.2739011651785547725795528785020120107490e-102",
                "1.1369505825892773862897764392510060053745e-102",
                "5.6847529129463869314488821962550300268725e-103",
                "2.8423764564731934657244410981275150134362e-103",
                "1.4211882282365967328622205490637575067181e-103",
                "7.1059411411829836643111027453187875335906e-104",
                "3.5529705705914918321555513726593937667953e-104",
                "1.7764852852957459160777756863296968833977e-104",
                "8.8824264264787295803888784316484844169883e-105",
                "4.4412132132393647901944392158242422084941e-105",
                "2.2206066066196823950972196079121211042471e-105",
                "1.1103033033098411975486098039560605521235e-105",
                "5.5515165165492059877430490197803027606177e-106",
                "2.7757582582746029938715245098901513803088e-106",
                "1.3878791291373014969357622549450756901544e-106",
                "6.9393956456865074846788112747253784507721e-107",
                "3.4696978228432537423394056373626892253860e-107",
                "1.7348489114216268711697028186813446126930e-107",
                "8.6742445571081343558485140934067230634651e-108",
                "4.3371222785540671779242570467033615317326e-108",
                "2.1685611392770335889621285233516807658663e-108",
                "1.0842805696385167944810642616758403829331e-108",
                "5.4214028481925839724053213083792019146657e-109",
                "2.7107014240962919862026606541896009573328e-109",
                "1.3553507120481459931013303270948004786664e-109",
                "6.7767535602407299655066516354740023933321e-110",
                "3.3883767801203649827533258177370011966661e-110",
                "1.6941883900601824913766629088685005983330e-110",
                "8.4709419503009124568833145443425029916651e-111",
                "4.2354709751504562284416572721712514958326e-111",
                "2.1177354875752281142208286360856257479163e-111",
                "1.0588677437876140571104143180428128739581e-111",
                "5.2943387189380702855520715902140643697907e-112",
                "2.6471693594690351427760357951070321848954e-112",
                "1.3235846797345175713880178975535160924477e-112",
                "6.6179233986725878569400894877675804622384e-113",
                "3.3089616993362939284700447438837902311192e-113",
                "1.6544808496681469642350223719418951155596e-113",
                "8.2724042483407348211751118597094755777980e-114",
                "4.1362021241703674105875559298547377888990e-114",
                "2.0681010620851837052937779649273688944495e-114",
                "1.0340505310425918526468889824636844472247e-114",
                "5.1702526552129592632344449123184222361237e-115",
                "2.5851263276064796316172224561592111180619e-115",
                "1.2925631638032398158086112280796055590309e-115",
                "6.4628158190161990790430561403980277951547e-116",
                "3.2314079095080995395215280701990138975773e-116",
                "1.6157039547540497697607640350995069487887e-116",
                "8.0785197737702488488038201754975347439433e-117",
                "4.0392598868851244244019100877487673719717e-117",
                "2.0196299434425622122009550438743836859858e-117",
                "1.0098149717212811061004775219371918429929e-117",
                "5.0490748586064055305023876096859592149646e-118",
                "2.5245374293032027652511938048429796074823e-118",
                "1.2622687146516013826255969024214898037411e-118",
                "6.3113435732580069131279845121074490187057e-119",
                "3.1556717866290034565639922560537245093529e-119",
                "1.5778358933145017282819961280268622546764e-119",
                "7.8891794665725086414099806401343112733822e-120",
                "3.9445897332862543207049903200671556366911e-120",
                "1.9722948666431271603524951600335778183455e-120",
                "9.8614743332156358017624758001678890917277e-121",
                "4.9307371666078179008812379000839445458639e-121",
                "2.4653685833039089504406189500419722729319e-121",
                "1.2326842916519544752203094750209861364660e-121",
                "6.1634214582597723761015473751049306823298e-122",
                "3.0817107291298861880507736875524653411649e-122",
                "1.5408553645649430940253868437762326705825e-122",
                "7.7042768228247154701269342188811633529123e-123",
                "3.8521384114123577350634671094405816764561e-123",
                "1.9260692057061788675317335547202908382281e-123",
                "9.6303460285308943376586677736014541911404e-124",
                "4.8151730142654471688293338868007270955702e-124",
                "2.4075865071327235844146669434003635477851e-124",
                "1.2037932535663617922073334717001817738925e-124",
                "6.0189662678318089610366673585009088694627e-125",
                "3.0094831339159044805183336792504544347314e-125",
                "1.5047415669579522402591668396252272173657e-125",
                "7.5237078347897612012958341981261360868284e-126",
                "3.7618539173948806006479170990630680434142e-126",
                "1.8809269586974403003239585495315340217071e-126",
                "9.4046347934872015016197927476576701085355e-127",
                "4.7023173967436007508098963738288350542678e-127",
                "2.3511586983718003754049481869144175271339e-127",
                "1.1755793491859001877024740934572087635669e-127",
                "5.8778967459295009385123704672860438178347e-128",
                "2.9389483729647504692561852336430219089173e-128",
                "1.4694741864823752346280926168215109544587e-128",
                "7.3473709324118761731404630841075547722934e-129",
                "3.6736854662059380865702315420537773861467e-129",
                "1.8368427331029690432851157710268886930733e-129",
                "9.1842136655148452164255788551344434653667e-130",
                "4.5921068327574226082127894275672217326834e-130",
                "2.2960534163787113041063947137836108663417e-130",
                "1.1480267081893556520531973568918054331708e-130",
                "5.7401335409467782602659867844590271658542e-131",
                "2.8700667704733891301329933922295135829271e-131",
                "1.4350333852366945650664966961147567914635e-131",
                "7.1751669261834728253324834805737839573177e-132",
                "3.5875834630917364126662417402868919786589e-132",
                "1.7937917315458682063331208701434459893294e-132",
                "8.9689586577293410316656043507172299466472e-133",
                "4.4844793288646705158328021753586149733236e-133",
                "2.2422396644323352579164010876793074866618e-133",
                "1.1211198322161676289582005438396537433309e-133",
                "5.6055991610808381447910027191982687166545e-134",
                "2.8027995805404190723955013595991343583272e-134",
                "1.4013997902702095361977506797995671791636e-134",
                "7.0069989513510476809887533989978358958181e-135",
                "3.5034994756755238404943766994989179479091e-135",
                "1.7517497378377619202471883497494589739545e-135",
                "8.7587486891888096012359417487472948697726e-136",
                "4.3793743445944048006179708743736474348863e-136",
                "2.1896871722972024003089854371868237174432e-136",
                "1.0948435861486012001544927185934118587216e-136",
                "5.4742179307430060007724635929670592936079e-137",
                "2.7371089653715030003862317964835296468039e-137",
                "1.3685544826857515001931158982417648234020e-137",
                "6.8427724134287575009655794912088241170099e-138",
                "3.4213862067143787504827897456044120585049e-138",
                "1.7106931033571893752413948728022060292525e-138",
                "8.5534655167859468762069743640110301462623e-139",
                "4.2767327583929734381034871820055150731312e-139",
                "2.1383663791964867190517435910027575365656e-139",
                "1.0691831895982433595258717955013787682828e-139",
                "5.3459159479912167976293589775068938414140e-140",
                "2.6729579739956083988146794887534469207070e-140",
                "1.3364789869978041994073397443767234603535e-140",
                "6.6823949349890209970366987218836173017674e-141",
                "3.3411974674945104985183493609418086508837e-141",
                "1.6705987337472552492591746804709043254419e-141",
                "8.3529936687362762462958734023545216272093e-142",
                "4.1764968343681381231479367011772608136047e-142",
                "2.0882484171840690615739683505886304068023e-142",
                "1.0441242085920345307869841752943152034012e-142",
                "5.2206210429601726539349208764715760170058e-143",
                "2.6103105214800863269674604382357880085029e-143",
                "1.3051552607400431634837302191178940042515e-143",
                "6.5257763037002158174186510955894700212573e-144",
                "3.2628881518501079087093255477947350106286e-144",
                "1.6314440759250539543546627738973675053143e-144",
                "8.1572203796252697717733138694868375265716e-145",
                "4.0786101898126348858866569347434187632858e-145",
                "2.0393050949063174429433284673717093816429e-145",
                "1.0196525474531587214716642336858546908214e-145",
                "5.0982627372657936073583211684292734541072e-146",
                "2.5491313686328968036791605842146367270536e-146",
                "1.2745656843164484018395802921073183635268e-146",
                "6.3728284215822420091979014605365918176341e-147",
                "3.1864142107911210045989507302682959088170e-147",
                "1.5932071053955605022994753651341479544085e-147",
                "7.9660355269778025114973768256707397720426e-148",
                "3.9830177634889012557486884128353698860213e-148",
                "1.9915088817444506278743442064176849430106e-148",
                "9.9575444087222531393717210320884247150532e-149",
                "4.9787722043611265696858605160442123575266e-149",
                "2.4893861021805632848429302580221061787633e-149",
                "1.2446930510902816424214651290110530893817e-149",
                "6.2234652554514082121073256450552654469083e-150",
                "3.1117326277257041060536628225276327234541e-150",
                "1.5558663138628520530268314112638163617271e-150",
                "7.7793315693142602651341570563190818086353e-151",
                "3.8896657846571301325670785281595409043177e-151",
                "1.9448328923285650662835392640797704521588e-151",
                "9.7241644616428253314176963203988522607941e-152",
                "4.8620822308214126657088481601994261303971e-152",
                "2.4310411154107063328544240800997130651985e-152",
                "1.2155205577053531664272120400498565325993e-152",
                "6.0776027885267658321360602002492826629963e-153",
                "3.0388013942633829160680301001246413314982e-153",
                "1.5194006971316914580340150500623206657491e-153",
                "7.5970034856584572901700752503116033287454e-154",
                "3.7985017428292286450850376251558016643727e-154",
                "1.8992508714146143225425188125779008321864e-154",
                "9.4962543570730716127125940628895041609318e-155",
                "4.7481271785365358063562970314447520804659e-155",
                "2.3740635892682679031781485157223760402329e-155",
                "1.1870317946341339515890742578611880201165e-155",
                "5.9351589731706697579453712893059401005824e-156",
                "2.9675794865853348789726856446529700502912e-156",
                "1.4837897432926674394863428223264850251456e-156",
                "7.4189487164633371974317141116324251257280e-157",
                "3.7094743582316685987158570558162125628640e-157",
                "1.8547371791158342993579285279081062814320e-157",
                "9.2736858955791714967896426395405314071599e-158",
                "4.6368429477895857483948213197702657035800e-158",
                "2.3184214738947928741974106598851328517900e-158",
                "1.1592107369473964370987053299425664258950e-158",
                "5.7960536847369821854935266497128321294750e-159",
                "2.8980268423684910927467633248564160647375e-159",
                "1.4490134211842455463733816624282080323687e-159",
                "7.2450671059212277318669083121410401618437e-160",
                "3.6225335529606138659334541560705200809219e-160",
                "1.8112667764803069329667270780352600404609e-160",
                "9.0563338824015346648336353901763002023046e-161",
                "4.5281669412007673324168176950881501011523e-161",
                "2.2640834706003836662084088475440750505762e-161",
                "1.1320417353001918331042044237720375252881e-161",
                "5.6602086765009591655210221188601876264404e-162",
                "2.8301043382504795827605110594300938132202e-162",
                "1.4150521691252397913802555297150469066101e-162",
                "7.0752608456261989569012776485752345330505e-163",
                "3.5376304228130994784506388242876172665252e-163",
                "1.7688152114065497392253194121438086332626e-163",
                "8.8440760570327486961265970607190431663131e-164",
                "4.4220380285163743480632985303595215831566e-164",
                "2.2110190142581871740316492651797607915783e-164",
                "1.1055095071290935870158246325898803957891e-164",
                "5.5275475356454679350791231629494019789457e-165",
                "2.7637737678227339675395615814747009894729e-165",
                "1.3818868839113669837697807907373504947364e-165",
                "6.9094344195568349188489039536867524736821e-166",
                "3.4547172097784174594244519768433762368411e-166",
                "1.7273586048892087297122259884216881184205e-166",
                "8.6367930244460436485611299421084405921027e-167",
                "4.3183965122230218242805649710542202960513e-167",
                "2.1591982561115109121402824855271101480257e-167",
                "1.0795991280557554560701412427635550740128e-167",
                "5.3979956402787772803507062138177753700642e-168",
                "2.6989978201393886401753531069088876850321e-168",
                "1.3494989100696943200876765534544438425160e-168",
                "6.7474945503484716004383827672722192125802e-169",
                "3.3737472751742358002191913836361096062901e-169",
                "1.6868736375871179001095956918180548031451e-169",
                "8.4343681879355895005479784590902740157253e-170",
                "4.2171840939677947502739892295451370078626e-170",
                "2.1085920469838973751369946147725685039313e-170",
                "1.0542960234919486875684973073862842519657e-170",
                "5.2714801174597434378424865369314212598283e-171",
                "2.6357400587298717189212432684657106299141e-171",
                "1.3178700293649358594606216342328553149571e-171",
                "6.5893501468246792973031081711642765747854e-172",
                "3.2946750734123396486515540855821382873927e-172",
                "1.6473375367061698243257770427910691436963e-172",
                "8.2366876835308491216288852139553457184817e-173",
                "4.1183438417654245608144426069776728592408e-173",
                "2.0591719208827122804072213034888364296204e-173",
                "1.0295859604413561402036106517444182148102e-173",
                "5.1479298022067807010180532587220910740511e-174",
                "2.5739649011033903505090266293610455370255e-174",
                "1.2869824505516951752545133146805227685128e-174",
                "6.4349122527584758762725665734026138425638e-175",
                "3.2174561263792379381362832867013069212819e-175",
                "1.6087280631896189690681416433506534606410e-175",
                "8.0436403159480948453407082167532673032048e-176",
                "4.0218201579740474226703541083766336516024e-176",
                "2.0109100789870237113351770541883168258012e-176",
                "1.0054550394935118556675885270941584129006e-176",
                "5.0272751974675592783379426354707920645030e-177",
                "2.5136375987337796391689713177353960322515e-177",
                "1.2568187993668898195844856588676980161257e-177",
                "6.2840939968344490979224282943384900806287e-178",
                "3.1420469984172245489612141471692450403144e-178",
                "1.5710234992086122744806070735846225201572e-178",
                "7.8551174960430613724030353679231126007859e-179",
                "3.9275587480215306862015176839615563003930e-179",
                "1.9637793740107653431007588419807781501965e-179",
                "9.8188968700538267155037942099038907509824e-180",
                "4.9094484350269133577518971049519453754912e-180",
                "2.4547242175134566788759485524759726877456e-180",
                "1.2273621087567283394379742762379863438728e-180",
                "6.1368105437836416971898713811899317193640e-181",
                "3.0684052718918208485949356905949658596820e-181",
                "1.5342026359459104242974678452974829298410e-181",
                "7.6710131797295521214873392264874146492050e-182",
                "3.8355065898647760607436696132437073246025e-182",
                "1.9177532949323880303718348066218536623012e-182",
                "9.5887664746619401518591740331092683115062e-183",
                "4.7943832373309700759295870165546341557531e-183",
                "2.3971916186654850379647935082773170778766e-183",
                "1.1985958093327425189823967541386585389383e-183",
                "5.9929790466637125949119837706932926946914e-184",
                "2.9964895233318562974559918853466463473457e-184",
                "1.4982447616659281487279959426733231736729e-184",
                "7.4912238083296407436399797133666158683643e-185",
                "3.7456119041648203718199898566833079341821e-185",
                "1.8728059520824101859099949283416539670911e-185",
                "9.3640297604120509295499746417082698354553e-186",
                "4.6820148802060254647749873208541349177277e-186",
                "2.3410074401030127323874936604270674588638e-186",
                "1.1705037200515063661937468302135337294319e-186",
                "5.8525186002575318309687341510676686471596e-187",
                "2.9262593001287659154843670755338343235798e-187",
                "1.4631296500643829577421835377669171617899e-187",
                "7.3156482503219147887109176888345858089495e-188",
                "3.6578241251609573943554588444172929044747e-188",
                "1.8289120625804786971777294222086464522374e-188",
                "9.1445603129023934858886471110432322611868e-189",
                "4.5722801564511967429443235555216161305934e-189",
                "2.2861400782255983714721617777608080652967e-189",
                "1.1430700391127991857360808888804040326484e-189",
                "5.7153501955639959286804044444020201632418e-190",
                "2.8576750977819979643402022222010100816209e-190",
                "1.4288375488909989821701011111005050408104e-190",
                "7.1441877444549949108505055555025252040522e-191",
                "3.5720938722274974554252527777512626020261e-191",
                "1.7860469361137487277126263888756313010131e-191",
                "8.9302346805687436385631319443781565050653e-192",
                "4.4651173402843718192815659721890782525326e-192",
                "2.2325586701421859096407829860945391262663e-192",
                "1.1162793350710929548203914930472695631332e-192",
                "5.5813966753554647741019574652363478156658e-193",
                "2.7906983376777323870509787326181739078329e-193",
                "1.3953491688388661935254893663090869539164e-193",
                "6.9767458441943309676274468315454347695822e-194",
                "3.4883729220971654838137234157727173847911e-194",
                "1.7441864610485827419068617078863586923956e-194",
                "8.7209323052429137095343085394317934619778e-195",
                "4.3604661526214568547671542697158967309889e-195",
                "2.1802330763107284273835771348579483654944e-195",
                "1.0901165381553642136917885674289741827472e-195",
                "5.4505826907768210684589428371448709137361e-196",
                "2.7252913453884105342294714185724354568681e-196",
                "1.3626456726942052671147357092862177284340e-196",
                "6.8132283634710263355736785464310886421702e-197",
                "3.4066141817355131677868392732155443210851e-197",
                "1.7033070908677565838934196366077721605425e-197",
                "8.5165354543387829194670981830388608027127e-198",
                "4.2582677271693914597335490915194304013563e-198",
                "2.1291338635846957298667745457597152006782e-198",
                "1.0645669317923478649333872728798576003391e-198",
                "5.3228346589617393246669363643992880016954e-199",
                "2.6614173294808696623334681821996440008477e-199",
                "1.3307086647404348311667340910998220004239e-199",
                "6.6535433237021741558336704554991100021193e-200",
                "3.3267716618510870779168352277495550010596e-200",
                "1.6633858309255435389584176138747775005298e-200",
                "8.3169291546277176947920880693738875026491e-201",
                "4.1584645773138588473960440346869437513246e-201",
                "2.0792322886569294236980220173434718756623e-201",
                "1.0396161443284647118490110086717359378311e-201",
                "5.1980807216423235592450550433586796891557e-202",
                "2.5990403608211617796225275216793398445778e-202",
                "1.2995201804105808898112637608396699222889e-202",
                "6.4976009020529044490563188041983496114446e-203",
                "3.2488004510264522245281594020991748057223e-203",
                "1.6244002255132261122640797010495874028612e-203",
                "8.1220011275661305613203985052479370143058e-204",
                "4.0610005637830652806601992526239685071529e-204",
                "2.0305002818915326403300996263119842535764e-204",
                "1.0152501409457663201650498131559921267882e-204",
                "5.0762507047288316008252490657799606339411e-205",
                "2.5381253523644158004126245328899803169706e-205",
                "1.2690626761822079002063122664449901584853e-205",
                "6.3453133809110395010315613322249507924264e-206",
                "3.1726566904555197505157806661124753962132e-206",
                "1.5863283452277598752578903330562376981066e-206",
                "7.9316417261387993762894516652811884905330e-207",
                "3.9658208630693996881447258326405942452665e-207",
                "1.9829104315346998440723629163202971226332e-207",
                "9.9145521576734992203618145816014856131662e-208",
                "4.9572760788367496101809072908007428065831e-208",
                "2.4786380394183748050904536454003714032916e-208",
                "1.2393190197091874025452268227001857016458e-208",
                "6.1965950985459370127261341135009285082289e-209",
                "3.0982975492729685063630670567504642541144e-209",
                "1.5491487746364842531815335283752321270572e-209",
                "7.7457438731824212659076676418761606352861e-210",
                "3.8728719365912106329538338209380803176431e-210",
                "1.9364359682956053164769169104690401588215e-210",
                "9.6821798414780265823845845523452007941076e-211",
                "4.8410899207390132911922922761726003970538e-211",
                "2.4205449603695066455961461380863001985269e-211",
                "1.2102724801847533227980730690431500992635e-211",
                "6.0513624009237666139903653452157504963173e-212",
                "3.0256812004618833069951826726078752481586e-212",
                "1.5128406002309416534975913363039376240793e-212",
                "7.5642030011547082674879566815196881203966e-213",
                "3.7821015005773541337439783407598440601983e-213",
                "1.8910507502886770668719891703799220300992e-213",
                "9.4552537514433853343599458518996101504957e-214",
                "4.7276268757216926671799729259498050752479e-214",
                "2.3638134378608463335899864629749025376239e-214",
                "1.1819067189304231667949932314874512688120e-214",
                "5.9095335946521158339749661574372563440598e-215",
                "2.9547667973260579169874830787186281720299e-215",
                "1.4773833986630289584937415393593140860150e-215",
                "7.3869169933151447924687076967965704300748e-216",
                "3.6934584966575723962343538483982852150374e-216",
                "1.8467292483287861981171769241991426075187e-216",
                "9.2336462416439309905858846209957130375935e-217",
                "4.6168231208219654952929423104978565187968e-217",
                "2.3084115604109827476464711552489282593984e-217",
                "1.1542057802054913738232355776244641296992e-217",
                "5.7710289010274568691161778881223206484959e-218",
                "2.8855144505137284345580889440611603242480e-218",
                "1.4427572252568642172790444720305801621240e-218",
                "7.2137861262843210863952223601529008106199e-219",
                "3.6068930631421605431976111800764504053100e-219",
                "1.8034465315710802715988055900382252026550e-219",
                "9.0172326578554013579940279501911260132749e-220",
                "4.5086163289277006789970139750955630066375e-220",
                "2.2543081644638503394985069875477815033187e-220",
                "1.1271540822319251697492534937738907516594e-220",
                "5.6357704111596258487462674688694537582968e-221",
                "2.8178852055798129243731337344347268791484e-221",
                "1.4089426027899064621865668672173634395742e-221",
                "7.0447130139495323109328343360868171978710e-222",
                "3.5223565069747661554664171680434085989355e-222",
                "1.7611782534873830777332085840217042994678e-222",
                "8.8058912674369153886660429201085214973388e-223",
                "4.4029456337184576943330214600542607486694e-223",
                "2.2014728168592288471665107300271303743347e-223",
                "1.1007364084296144235832553650135651871673e-223",
                "5.5036820421480721179162768250678259358367e-224",
                "2.7518410210740360589581384125339129679184e-224",
                "1.3759205105370180294790692062669564839592e-224",
                "6.8796025526850901473953460313347824197959e-225",
                "3.4398012763425450736976730156673912098980e-225",
                "1.7199006381712725368488365078336956049490e-225",
                "8.5995031908563626842441825391684780247449e-226",
                "4.2997515954281813421220912695842390123724e-226",
                "2.1498757977140906710610456347921195061862e-226",
                "1.0749378988570453355305228173960597530931e-226",
                "5.3746894942852266776526140869802987654656e-227",
                "2.6873447471426133388263070434901493827328e-227",
                "1.3436723735713066694131535217450746913664e-227",
                "6.7183618678565333470657676087253734568320e-228",
                "3.3591809339282666735328838043626867284160e-228",
                "1.6795904669641333367664419021813433642080e-228",
                "8.3979523348206666838322095109067168210399e-229",
                "4.1989761674103333419161047554533584105200e-229",
                "2.0994880837051666709580523777266792052600e-229",
                "1.0497440418525833354790261888633396026300e-229",
                "5.2487202092629166773951309443166980131500e-230",
                "2.6243601046314583386975654721583490065750e-230",
                "1.3121800523157291693487827360791745032875e-230",
                "6.5609002615786458467439136803958725164375e-231",
                "3.2804501307893229233719568401979362582187e-231",
                "1.6402250653946614616859784200989681291094e-231",
                "8.2011253269733073084298921004948406455468e-232",
                "4.1005626634866536542149460502474203227734e-232",
                "2.0502813317433268271074730251237101613867e-232",
                "1.0251406658716634135537365125618550806934e-232",
                "5.1257033293583170677686825628092754034668e-233",
                "2.5628516646791585338843412814046377017334e-233",
                "1.2814258323395792669421706407023188508667e-233",
                "6.4071291616978963347108532035115942543335e-234",
                "3.2035645808489481673554266017557971271667e-234",
                "1.6017822904244740836777133008778985635834e-234",
                "8.0089114521223704183885665043894928179168e-235",
                "4.0044557260611852091942832521947464089584e-235",
                "2.0022278630305926045971416260973732044792e-235",
                "1.0011139315152963022985708130486866022396e-235",
                "5.0055696575764815114928540652434330111980e-236",
                "2.5027848287882407557464270326217165055990e-236",
                "1.2513924143941203778732135163108582527995e-236",
                "6.2569620719706018893660675815542912639975e-237",
                "3.1284810359853009446830337907771456319988e-237",
                "1.5642405179926504723415168953885728159994e-237",
                "7.8212025899632523617075844769428640799969e-238",
                "3.9106012949816261808537922384714320399984e-238",
                "1.9553006474908130904268961192357160199992e-238",
                "9.7765032374540654521344805961785800999961e-239",
                "4.8882516187270327260672402980892900499981e-239",
                "2.4441258093635163630336201490446450249990e-239",
                "1.2220629046817581815168100745223225124995e-239",
                "6.1103145234087909075840503726116125624976e-240",
                "3.0551572617043954537920251863058062812488e-240",
                "1.5275786308521977268960125931529031406244e-240",
                "7.6378931542609886344800629657645157031220e-241",
                "3.8189465771304943172400314828822578515610e-241",
                "1.9094732885652471586200157414411289257805e-241",
                "9.5473664428262357931000787072056446289025e-242",
                "4.7736832214131178965500393536028223144512e-242",
                "2.3868416107065589482750196768014111572256e-242",
                "1.1934208053532794741375098384007055786128e-242",
                "5.9671040267663973706875491920035278930640e-243",
                "2.9835520133831986853437745960017639465320e-243",
                "1.4917760066915993426718872980008819732660e-243",
                "7.4588800334579967133594364900044098663300e-244",
                "3.7294400167289983566797182450022049331650e-244",
                "1.8647200083644991783398591225011024665825e-244",
                "9.3236000418224958916992956125055123329125e-245",
                "4.6618000209112479458496478062527561664563e-245",
                "2.3309000104556239729248239031263780832281e-245",
                "1.1654500052278119864624119515631890416141e-245",
                "5.8272500261390599323120597578159452080703e-246",
                "2.9136250130695299661560298789079726040352e-246",
                "1.4568125065347649830780149394539863020176e-246",
                "7.2840625326738249153900746972699315100879e-247",
                "3.6420312663369124576950373486349657550440e-247",
                "1.8210156331684562288475186743174828775220e-247",
                "9.1050781658422811442375933715874143876099e-248",
                "4.5525390829211405721187966857937071938050e-248",
                "2.2762695414605702860593983428968535969025e-248",
                "1.1381347707302851430296991714484267984512e-248",
                "5.6906738536514257151484958572421339922562e-249",
                "2.8453369268257128575742479286210669961281e-249",
                "1.4226684634128564287871239643105334980640e-249",
                "7.1133423170642821439356198215526674903202e-250",
                "3.5566711585321410719678099107763337451601e-250",
                "1.7783355792660705359839049553881668725801e-250",
                "8.8916778963303526799195247769408343629003e-251",
                "4.4458389481651763399597623884704171814502e-251",
                "2.2229194740825881699798811942352085907251e-251",
                "1.1114597370412940849899405971176042953625e-251",
                "5.5572986852064704249497029855880214768127e-252",
                "2.7786493426032352124748514927940107384063e-252",
                "1.3893246713016176062374257463970053692032e-252",
                "6.9466233565080880311871287319850268460159e-253",
                "3.4733116782540440155935643659925134230079e-253",
                "1.7366558391270220077967821829962567115040e-253",
                "8.6832791956351100389839109149812835575198e-254",
                "4.3416395978175550194919554574906417787599e-254",
                "2.1708197989087775097459777287453208893800e-254",
                "1.0854098994543887548729888643726604446900e-254",
                "5.4270494972719437743649443218633022234499e-255",
                "2.7135247486359718871824721609316511117249e-255",
                "1.3567623743179859435912360804658255558625e-255",
                "6.7838118715899297179561804023291277793124e-256",
                "3.3919059357949648589780902011645638896562e-256",
                "1.6959529678974824294890451005822819448281e-256",
                "8.4797648394874121474452255029114097241405e-257",
                "4.2398824197437060737226127514557048620702e-257",
                "2.1199412098718530368613063757278524310351e-257",
                "1.0599706049359265184306531878639262155176e-257",
                "5.2998530246796325921532659393196310775878e-258",
                "2.6499265123398162960766329696598155387939e-258",
                "1.3249632561699081480383164848299077693969e-258",
                "6.6248162808495407401915824241495388469847e-259",
                "3.3124081404247703700957912120747694234924e-259",
                "1.6562040702123851850478956060373847117462e-259",
                "8.2810203510619259252394780301869235587309e-260",
                "4.1405101755309629626197390150934617793655e-260",
                "2.0702550877654814813098695075467308896827e-260",
                "1.0351275438827407406549347537733654448414e-260",
                "5.1756377194137037032746737688668272242068e-261",
                "2.5878188597068518516373368844334136121034e-261",
                "1.2939094298534259258186684422167068060517e-261",
                "6.4695471492671296290933422110835340302585e-262",
                "3.2347735746335648145466711055417670151293e-262",
                "1.6173867873167824072733355527708835075646e-262",
                "8.0869339365839120363666777638544175378232e-263",
                "4.0434669682919560181833388819272087689116e-263",
                "2.0217334841459780090916694409636043844558e-263",
                "1.0108667420729890045458347204818021922279e-263",
                "5.0543337103649450227291736024090109611395e-264",
                "2.5271668551824725113645868012045054805697e-264",
                "1.2635834275912362556822934006022527402849e-264",
                "6.3179171379561812784114670030112637014243e-265",
                "3.1589585689780906392057335015056318507122e-265",
                "1.5794792844890453196028667507528159253561e-265",
                "7.8973964224452265980143337537640796267804e-266",
                "3.9486982112226132990071668768820398133902e-266",
                "1.9743491056113066495035834384410199066951e-266",
                "9.8717455280565332475179171922050995334755e-267",
                "4.9358727640282666237589585961025497667378e-267",
                "2.4679363820141333118794792980512748833689e-267",
                "1.2339681910070666559397396490256374416844e-267",
                "6.1698409550353332796986982451281872084222e-268",
                "3.0849204775176666398493491225640936042111e-268",
                "1.5424602387588333199246745612820468021056e-268",
                "7.7123011937941665996233728064102340105278e-269",
                "3.8561505968970832998116864032051170052639e-269",
                "1.9280752984485416499058432016025585026319e-269",
                "9.6403764922427082495292160080127925131597e-270",
                "4.8201882461213541247646080040063962565799e-270",
                "2.4100941230606770623823040020031981282899e-270",
                "1.2050470615303385311911520010015990641450e-270",
                "6.0252353076516926559557600050079953207248e-271",
                "3.0126176538258463279778800025039976603624e-271",
                "1.5063088269129231639889400012519988301812e-271",
                "7.5315441345646158199447000062599941509060e-272",
                "3.7657720672823079099723500031299970754530e-272",
                "1.8828860336411539549861750015649985377265e-272",
                "9.4144301682057697749308750078249926886325e-273",
                "4.7072150841028848874654375039124963443163e-273",
                "2.3536075420514424437327187519562481721581e-273",
                "1.1768037710257212218663593759781240860791e-273",
                "5.8840188551286061093317968798906204303953e-274",
                "2.9420094275643030546658984399453102151977e-274",
                "1.4710047137821515273329492199726551075988e-274",
                "7.3550235689107576366647460998632755379942e-275",
                "3.6775117844553788183323730499316377689971e-275",
                "1.8387558922276894091661865249658188844985e-275",
                "9.1937794611384470458309326248290944224927e-276",
                "4.5968897305692235229154663124145472112463e-276",
                "2.2984448652846117614577331562072736056232e-276",
                "1.1492224326423058807288665781036368028116e-276",
                "5.7461121632115294036443328905181840140579e-277",
                "2.8730560816057647018221664452590920070290e-277",
                "1.4365280408028823509110832226295460035145e-277",
                "7.1826402040144117545554161131477300175724e-278",
                "3.5913201020072058772777080565738650087862e-278",
                "1.7956600510036029386388540282869325043931e-278",
                "8.9783002550180146931942701414346625219655e-279",
                "4.4891501275090073465971350707173312609828e-279",
                "2.2445750637545036732985675353586656304914e-279",
                "1.1222875318772518366492837676793328152457e-279",
                "5.6114376593862591832464188383966640762285e-280",
                "2.8057188296931295916232094191983320381142e-280",
                "1.4028594148465647958116047095991660190571e-280",
                "7.0142970742328239790580235479958300952856e-281",
                "3.5071485371164119895290117739979150476428e-281",
                "1.7535742685582059947645058869989575238214e-281",
                "8.7678713427910299738225294349947876191070e-282",
                "4.3839356713955149869112647174973938095535e-282",
                "2.1919678356977574934556323587486969047767e-282",
                "1.0959839178488787467278161793743484523884e-282",
                "5.4799195892443937336390808968717422619418e-283",
                "2.7399597946221968668195404484358711309709e-283",
                "1.3699798973110984334097702242179355654855e-283",
                "6.8498994865554921670488511210896778274273e-284",
                "3.4249497432777460835244255605448389137137e-284",
                "1.7124748716388730417622127802724194568568e-284",
                "8.5623743581943652088110639013620972842841e-285",
                "4.2811871790971826044055319506810486421421e-285",
                "2.1405935895485913022027659753405243210710e-285",
                "1.0702967947742956511013829876702621605355e-285",
                "5.3514839738714782555069149383513108026776e-286",
                "2.6757419869357391277534574691756554013388e-286",
                "1.3378709934678695638767287345878277006694e-286",
                "6.6893549673393478193836436729391385033470e-287",
                "3.3446774836696739096918218364695692516735e-287",
                "1.6723387418348369548459109182347846258367e-287",
                "8.3616937091741847742295545911739231291837e-288",
                "4.1808468545870923871147772955869615645919e-288",
                "2.0904234272935461935573886477934807822959e-288",
                "1.0452117136467730967786943238967403911480e-288",
                "5.2260585682338654838934716194837019557398e-289",
                "2.6130292841169327419467358097418509778699e-289",
                "1.3065146420584663709733679048709254889350e-289",
                "6.5325732102923318548668395243546274446748e-290",
                "3.2662866051461659274334197621773137223374e-290",
                "1.6331433025730829637167098810886568611687e-290",
                "8.1657165128654148185835494054432843058435e-291",
                "4.0828582564327074092917747027216421529217e-291",
                "2.0414291282163537046458873513608210764609e-291",
                "1.0207145641081768523229436756804105382304e-291",
                "5.1035728205408842616147183784020526911522e-292",
            ];

            foreach ((CauchyDistribution dist, ddouble[] expecteds) in new[]{
                (dist1, expected_dist1)
            }) {
                for ((ddouble x, int i) = (1, 0); i < expecteds.Length; x *= 2, i++) {
                    ddouble expected = expecteds[i];
                    ddouble actual_cdf = dist.CDF(-x);
                    ddouble actual_ccdf = dist.CDF(x, Interval.Upper);

                    Console.WriteLine($"{dist} ccdf({x})");
                    Console.WriteLine(expected);
                    Console.WriteLine(actual_cdf);

                    Assert.IsTrue(ddouble.Abs(expected - actual_cdf) / expected < 1e-30, $"{dist} cdf({-x})\n{expected}\n{actual_cdf}");
                    Assert.IsTrue(ddouble.Abs(expected - actual_ccdf) / expected < 1e-30, $"{dist} ccdf({x})\n{expected}\n{actual_cdf}");
                }
            }
        }
    }
}