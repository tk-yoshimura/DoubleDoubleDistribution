using DoubleDouble;
using DoubleDoubleStatistic;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace DoubleDoubleStatisticTest.ContinuousDistribution {
    [TestClass()]
    public class AlphaDistributionTests {
        readonly AlphaDistribution dist1 = new(alpha: 1);
        readonly AlphaDistribution dist2 = new(alpha: 2);

        AlphaDistribution[] Dists => [
            dist1,
            dist2,
        ];

        [TestMethod()]
        public void InfoTest() {
            foreach (AlphaDistribution dist in Dists) {
                Console.WriteLine(dist);
                Console.WriteLine($"Support={dist.Support}");
                Console.WriteLine($"Alpha={dist.Alpha}");
                Console.WriteLine($"Mean={dist.Mean}");
                Console.WriteLine($"Median={dist.Median}");
                Console.WriteLine($"Mode={dist.Mode}");
                Console.WriteLine($"Variance={dist.Variance}");
                Console.WriteLine($"Skewness={dist.Skewness}");
                Console.WriteLine($"Kurtosis={dist.Kurtosis}");
                Console.WriteLine($"Entropy={dist.Entropy}");
            }
        }

        [TestMethod()]
        public void ModeTest() {
            foreach (AlphaDistribution dist in Dists) {
                Console.WriteLine(dist);

                Assert.IsTrue(dist.PDF(dist.Mode) > dist.PDF(dist.Mode - 1e-4), $"{dist}\n{dist.Mode}");
                Assert.IsTrue(dist.PDF(dist.Mode) > dist.PDF(dist.Mode + 1e-4), $"{dist}\n{dist.Mode}");
            }
        }

        [TestMethod()]
        public void MedianTest() {
            foreach (AlphaDistribution dist in Dists) {
                Console.WriteLine(dist);

                Assert.IsTrue(ddouble.Abs(dist.CDF(dist.Median) - 0.5) < 1e-20, $"{dist}\n{dist.Median}");
            }
        }

        [TestMethod()]
        public void EntropyTest() {
            foreach (AlphaDistribution dist in Dists) {
                Console.WriteLine(dist);

                ddouble actual = dist.Entropy;
                ddouble expected = IntegrationStatistics.Entropy(dist, eps: 1e-28, discontinue_eval_points: 65536);
                Assert.IsTrue(ddouble.Abs(actual - expected) < 1e-28, $"{dist}\n{expected}\n{actual}");
            }
        }

        [TestMethod()]
        public void PDFTest() {
            foreach (AlphaDistribution dist in Dists) {
                Console.WriteLine(dist);
                for (ddouble x = 0; x <= 8; x += 0.125) {
                    ddouble pdf = dist.PDF(x);

                    Console.WriteLine($"pdf({x})={pdf}");
                }
            }
        }

        [TestMethod()]
        public void CDFLowerTest() {
            foreach (AlphaDistribution dist in Dists) {
                Console.WriteLine(dist);
                for (ddouble x = 0; x <= 8; x += 0.125) {
                    ddouble cdf = dist.CDF(x, Interval.Lower);

                    Console.WriteLine($"cdf({x})={cdf}");
                }
            }
        }

        [TestMethod()]
        public void CDFUpperTest() {
            foreach (AlphaDistribution dist in Dists) {
                Console.WriteLine(dist);
                for (ddouble x = 0; x <= 8; x += 0.125) {
                    ddouble cdf = dist.CDF(x, Interval.Lower);
                    ddouble ccdf = dist.CDF(x, Interval.Upper);

                    Console.WriteLine($"ccdf({x})={ccdf}");

                    Assert.IsTrue(ddouble.Abs(cdf + ccdf - 1) < 1e-28);
                }
            }
        }

        [TestMethod()]
        public void QuantileLowerTest() {
            foreach (AlphaDistribution dist in Dists) {
                Console.WriteLine(dist);
                for (int i = 0; i <= 10; i++) {
                    ddouble p = (ddouble)i / 10;
                    ddouble x = dist.Quantile(p, Interval.Lower);
                    ddouble cdf = dist.CDF(x, Interval.Lower);

                    Console.WriteLine($"quantile({p})={x}, cdf({x})={cdf}");

                    if (ddouble.IsFinite(x)) {
                        Assert.IsTrue(ddouble.Abs(p - cdf) < 1e-28);
                    }
                }
            }
        }

        [TestMethod()]
        public void QuantileUpperTest() {
            foreach (AlphaDistribution dist in Dists) {
                Console.WriteLine(dist);
                for (int i = 0; i <= 10; i++) {
                    ddouble p = (ddouble)i / 10;
                    ddouble x = dist.Quantile(p, Interval.Upper);
                    ddouble ccdf = dist.CDF(x, Interval.Upper);

                    Console.WriteLine($"cquantile({p})={x}, ccdf({x})={ccdf}");

                    if (ddouble.IsFinite(x)) {
                        Assert.IsTrue(ddouble.Abs(p - ccdf) < 1e-28);
                    }
                }
            }
        }

        [TestMethod()]
        public void PDFExpectedTest() {
            ddouble[] expected_dist1 = [
                0.000000000000000000e+00,
                1.150399883756713537e+00,
                4.741721895401621034e-01,
                1.993545211501199510e-01,
                1.046138721402371935e-01,
                6.336990480040911866e-02,
                4.218748973197398999e-02,
                2.999235593397877805e-02,
                2.237024667667200650e-02,
                1.730415412386946544e-02,
                1.377278715366849447e-02,
                1.121624974081804685e-02,
                9.307582254071614450e-03,
                7.845797242599461194e-03,
                6.701981895239366230e-03,
                5.790443742777853266e-03,
                5.052458423884222984e-03,
                4.446711531925955432e-03,
                3.943464460855083953e-03,
                3.520876341499369188e-03,
                3.162618547772773608e-03,
                2.856288224476643666e-03,
                2.592329361009672230e-03,
                2.363284189720161240e-03,
                2.163264311744431297e-03,
                1.987570892682446761e-03,
                1.832417818140487896e-03,
                1.694727131930455532e-03,
                1.571975984085169451e-03,
                1.462080793196570642e-03,
                1.363308637665754325e-03,
                1.274208804535634492e-03,
                1.193559424083421444e-03,
                1.120325509208038072e-03,
                1.053625698509891078e-03,
                9.927057005068449982e-04,
                9.369169399727700701e-04,
                8.856992741453845533e-04,
                8.385669162973474668e-04,
                7.950969043846890100e-04,
                7.549196023876141286e-04,
                7.177108351039065840e-04,
                6.831853432167620845e-04,
                6.510913113984835143e-04,
                6.212057730839199050e-04,
                5.933307350538803791e-04,
                5.672898958402882450e-04,
                5.429258562324399675e-04,
                5.200977393482619391e-04,
                4.986791529826660593e-04,
                4.785564391272560864e-04,
                4.596271653363365769e-04,
                4.417988205039015577e-04,
                4.249876840094761639e-04,
                4.091178423936705729e-04,
                3.941203319763107813e-04,
                3.799323893187495278e-04,
                3.664967943054445610e-04,
                3.537612929953787896e-04,
                3.416780893646864854e-04,
                3.302033967024825458e-04,
                3.192970407922158128e-04,
                3.089221081590325059e-04,
                2.990446336286552327e-04,
                2.896333222567549419e-04,
                2.806593013754985020e-04,
                2.720958990869496688e-04,
                2.639184460285564043e-04,
                2.561040976582823394e-04,
                2.486316746677656904e-04,
                2.414815194409188949e-04,
                2.346353667406826822e-04,
                2.280762270349260320e-04,
                2.217882810693439042e-04,
                2.157567844653405858e-04,
                2.099679812682309272e-04,
                2.044090254989610570e-04,
                1.990679098737376429e-04,
                1.939334009528233802e-04,
                1.889949800643068100e-04,
                1.842427894225920359e-04,
                1.796675829261195918e-04,
                1.752606811756658668e-04,
                1.710139303045244937e-04,
                1.669196642558586974e-04,
                1.629706701812990398e-04,
                1.591601566691224325e-04,
                1.554817245406487074e-04,
                1.519293399803389407e-04,
                1.484973097888965597e-04,
                1.451802585698306833e-04,
                1.419731076787673961e-04,
                1.388710557815642829e-04,
                1.358695608822437493e-04,
                1.329643236951219586e-04,
                1.301512722474614263e-04,
                1.274265476096741686e-04,
                1.247864906596953493e-04,
                1.222276297967581820e-04,
                1.197466695275369155e-04,
                1.173404798545853590e-04,
                1.150060864032673294e-04,
                1.127406612290264836e-04,
                1.105415142519443973e-04,
                1.084060852701438700e-04,
                1.063319365077629764e-04,
                1.043167456569984221e-04,
                1.023582993771362794e-04,
                1.004544872165898919e-04,
                9.860329592678103623e-05,
                9.680280413925886930e-05,
                9.505117737978022489e-05,
                9.334666339519261753e-05,
                9.168758777089345776e-05,
                9.007234981839931924e-05,
                8.849941871416684854e-05,
                8.696732987227514839e-05,
                8.547468153492158559e-05,
                8.402013156591168748e-05,
                8.260239443344828464e-05,
                8.122023836955519888e-05,
                7.987248269441721608e-05,
                7.855799529478384592e-05,
                7.727569024638265545e-05,
                7.602452557101924374e-05,
                7.480350111971440451e-05,
                7.361165657384976992e-05,
                7.244806955686257030e-05,
                7.131185384955796144e-05,
                7.020215770259134529e-05,
                6.911816224012131912e-05,
                6.805907994904768742e-05,
                6.702415324863050176e-05,
                6.601265313563958422e-05,
                6.502387790051095823e-05,
                6.405715191028875095e-05,
                6.311182445441187170e-05,
                6.218726864966381393e-05,
                6.128288040084533964e-05,
                6.039807741395302853e-05,
                5.953229825885377732e-05,
                5.868500147863891885e-05,
                5.785566474301939238e-05,
                5.704378404329133264e-05,
                5.624887292655505615e-05,
                5.547046176701576090e-05,
                5.470809707232751048e-05,
                5.396134082306828177e-05,
                5.322976984354936336e-05,
                5.251297520227228956e-05,
                5.181056164044708147e-05,
                5.112214702708119330e-05,
                5.044736183923634185e-05,
                4.978584866613367747e-05,
                4.913726173586484801e-05,
                4.850126646353887148e-05,
                4.787753901976247496e-05,
                4.726576591841486836e-05,
                4.666564362273736263e-05,
                4.607687816881371289e-05,
                4.549918480556918956e-05,
                4.493228765046561736e-05,
                4.437591936011471084e-05,
                4.382982081507593889e-05,
                4.329374081814488652e-05,
                4.276743580547638152e-05,
                4.225066956992211420e-05,
                4.174321299599618974e-05,
                4.124484380591327156e-05,
                4.075534631617393818e-05,
                4.027451120419962529e-05,
                3.980213528454556559e-05,
                3.933802129424537409e-05,
                3.888197768686370797e-05,
                3.843381843485570414e-05,
                3.799336283985241573e-05,
                3.756043535051120820e-05,
                3.713486538758810080e-05,
                3.671648717590686022e-05,
                3.630513958291578801e-05,
                3.590066596353862010e-05,
                3.550291401104072904e-05,
                3.511173561364555509e-05,
                3.472698671664921626e-05,
                3.434852718979379706e-05,
                3.397622069967120656e-05,
                3.360993458694079924e-05,
                3.324953974815436717e-05,
                3.289491052199180896e-05,
                3.254592457972059282e-05,
                3.220246281970047964e-05,
                3.186440926576387576e-05,
                3.153165096930984245e-05,
                3.120407791495750054e-05,
                3.088158292961173766e-05,
                3.056406159480075992e-05,
                3.025141216215198865e-05,
                2.994353547187800400e-05,
                2.964033487415124353e-05,
                2.934171615325061614e-05,
                2.904758745436909371e-05,
                2.875785921297616422e-05,
                2.847244408663359035e-05,
                2.819125688916770869e-05,
                2.791421452710561419e-05,
                2.764123593828663369e-05,
                2.737224203256449691e-05,
                2.710715563451922193e-05,
                2.684590142810114378e-05,
                2.658840590313316392e-05,
                2.633459730360005962e-05,
                2.608440557765712804e-05,
                2.583776232929301772e-05,
                2.559460077158460273e-05,
                2.535485568148415617e-05,
                2.511846335608167917e-05,
                2.488536157028781580e-05,
                2.465548953588457380e-05,
                2.442878786189384900e-05,
                2.420519851621528279e-05,
                2.398466478848737413e-05,
                2.376713125412732592e-05,
                2.355254373950716582e-05,
                2.334084928822529071e-05,
                2.313199612843413246e-05,
                2.292593364118641471e-05,
                2.272261232976389335e-05,
                2.252198378995374053e-05,
                2.232400068123944635e-05,
                2.212861669887405456e-05,
                2.193578654680509318e-05,
                2.174546591142163194e-05,
                2.155761143609495202e-05,
                2.137218069648572297e-05,
                2.118913217659122556e-05,
                2.100842524550751111e-05,
                2.083002013488221448e-05,
                2.065387791703451404e-05,
                2.047996048372001900e-05,
                2.030823052551868009e-05,
                2.013865151182514727e-05,
                1.997118767142141516e-05,
                1.980580397361246419e-05,
                1.964246610990639827e-05,
                1.948114047622115903e-05,
                1.932179415560053397e-05,
                1.916439490142299204e-05,
                1.900891112108723277e-05,
                1.885531186015907359e-05,
                1.870356678696488611e-05,
                1.855364617761720900e-05,
                1.840552090145872394e-05,
                1.825916240691133696e-05,
                1.811454270771751057e-05,
                1.797163436956145628e-05,
                1.783041049705826471e-05,
            ];
            ddouble[] expected_dist2 = [
                0.000000000000000000e+00,
                1.632918226724295208e+00,
                2.476037423279675576e-01,
                7.459030582217329730e-02,
                3.313318320627897662e-02,
                1.816048702476959209e-02,
                1.131032684962246515e-02,
                7.666927611877390365e-03,
                5.517864573782710509e-03,
                4.151326608973686036e-03,
                3.231523927786609726e-03,
                2.584264415450965042e-03,
                2.112253022724736289e-03,
                1.757835617467850631e-03,
                1.485155619555267271e-03,
                1.270996694886185850e-03,
                1.099806298193399274e-03,
                9.608576869650104499e-04,
                8.465634564915184603e-04,
                7.514370849999197364e-04,
                6.714333449385247177e-04,
                6.035177566240512020e-04,
                5.453786580939600859e-04,
                4.952304394540931647e-04,
                4.516764382696453238e-04,
                4.136117142599990003e-04,
                3.801529961471316081e-04,
                3.505874678993110079e-04,
                3.243348264990455424e-04,
                3.009188263366693460e-04,
                2.799456964178181928e-04,
                2.610875988656542399e-04,
                2.440698279828445289e-04,
                2.286608145072807369e-04,
                2.146642545904950514e-04,
                2.019128630822595249e-04,
                1.902633793810410182e-04,
                1.795925470743622767e-04,
                1.697938564452262673e-04,
                1.607748889206698226e-04,
                1.524551397167749230e-04,
                1.447642228148464329e-04,
                1.376403834796770937e-04,
                1.310292595847796244e-04,
                1.248828453261334069e-04,
                1.191586204200543070e-04,
                1.138188152777218251e-04,
                1.088297884353523767e-04,
                1.041614970722521143e-04,
                9.978704505194096325e-05,
                9.568229578779952331e-05,
                9.182553952654427278e-05,
                8.819720648436246832e-05,
                8.477961875714413694e-05,
                8.155677513172654880e-05,
                7.851416390678084885e-05,
                7.563859963476099013e-05,
                7.291808035541429383e-05,
                7.034166243450947777e-05,
                6.789935057070723779e-05,
                6.558200090641637728e-05,
                6.338123548908016240e-05,
                6.128936658888041542e-05,
                5.929932959641383077e-05,
                5.740462340683126507e-05,
                5.559925735120288954e-05,
                5.387770386634280044e-05,
                5.223485620497202896e-05,
                5.066599058218380176e-05,
                4.916673223438195042e-05,
                4.773302493541350765e-05,
                4.636110357334523199e-05,
                4.504746944176539236e-05,
                4.378886794290015643e-05,
                4.258226843727629313e-05,
                4.142484600703206349e-05,
                4.031396492801574339e-05,
                3.924716367015289602e-05,
                3.822214126673093259e-05,
                3.723674491169708480e-05,
                3.628895866017091572e-05,
                3.537689312145778656e-05,
                3.449877604619182720e-05,
                3.365294372006873451e-05,
                3.283783308615160199e-05,
                3.205197452611944440e-05,
                3.129398523822411450e-05,
                3.056256315625534910e-05,
                2.985648135959435558e-05,
                2.917458292955794183e-05,
                2.851577621177974804e-05,
                2.787903044841368638e-05,
                2.726337174753712460e-05,
                2.666787936033322167e-05,
                2.609168223948800199e-05,
                2.553395585478841146e-05,
                2.499391924419076244e-05,
                2.447083228067168588e-05,
                2.396399313700647176e-05,
                2.347273593226448102e-05,
                2.299642854528943228e-05,
                2.253447058176225924e-05,
                2.208629148264248127e-05,
                2.165134876286362736e-05,
                2.122912637013360876e-05,
                2.081913315457182607e-05,
                2.042090144071140407e-05,
                2.003398569411656862e-05,
                1.965796127551896428e-05,
                1.929242327596974259e-05,
                1.893698542704280808e-05,
                1.859127908061409266e-05,
                1.825495225318700035e-05,
                1.792766873013939215e-05,
                1.760910722563696279e-05,
                1.729896059429482494e-05,
                1.699693509097649418e-05,
                1.670274967540051028e-05,
                1.641613535848184229e-05,
                1.613683458757008665e-05,
                1.586460066796194619e-05,
                1.559919721826245014e-05,
                1.534039765735058946e-05,
                1.508798472087077089e-05,
                1.484175000532424479e-05,
                1.460149353797472278e-05,
                1.436702337091124790e-05,
                1.413815519773028683e-05,
                1.391471199140803687e-05,
                1.369652366203490679e-05,
                1.348342673317690943e-05,
                1.327526403571446113e-05,
                1.307188441808834825e-05,
                1.287314247195571495e-05,
                1.267889827232656036e-05,
                1.248901713131392034e-05,
                1.230336936468875812e-05,
                1.212183007048430692e-05,
                1.194427891894436223e-05,
                1.177059995315610367e-05,
                1.160068139975089611e-05,
                1.143441548909619829e-05,
                1.127169828443864123e-05,
                1.111242951949271625e-05,
                1.095651244400124416e-05,
                1.080385367682371255e-05,
                1.065436306613594420e-05,
                1.050795355635054003e-05,
                1.036454106139133284e-05,
                1.022404434397750259e-05,
                1.008638490059393227e-05,
                9.951486851843650090e-06,
                9.819276837896641859e-06,
                9.689683918765997365e-06,
                9.562639479158412413e-06,
                9.438077137660825323e-06,
                9.315932660038788525e-06,
                9.196143876435277793e-06,
                9.078650602270611948e-06,
                8.963394562655651769e-06,
                8.850319320141143201e-06,
                8.739370205635903997e-06,
                8.630494252336039679e-06,
                8.523640132516194061e-06,
                8.418758097041954084e-06,
                8.315799917470384164e-06,
                8.214718830612925964e-06,
                8.115469485441699526e-06,
                8.018007892226655401e-06,
                7.922291373797148094e-06,
                7.828278518827089849e-06,
                7.735929137048286853e-06,
                7.645204216301457466e-06,
                7.556065881339352491e-06,
                7.468477354300720792e-06,
                7.382402916778132561e-06,
                7.297807873406646018e-06,
                7.214658516903981946e-06,
                7.132922094496557635e-06,
                7.052566775668819229e-06,
                6.973561621176716524e-06,
                6.895876553268946813e-06,
                6.819482327062486091e-06,
                6.744350503021540772e-06,
                6.670453420491617006e-06,
                6.597764172242682364e-06,
                6.526256579977741804e-06,
                6.455905170765151337e-06,
                6.386685154355122289e-06,
                6.318572401342690149e-06,
                6.251543422141226180e-06,
                6.185575346732319960e-06,
                6.120645905159421209e-06,
                6.056733408734184468e-06,
                5.993816731925949234e-06,
                5.931875294906073120e-06,
                5.870889046720240854e-06,
                5.810838449063031478e-06,
                5.751704460630252658e-06,
                5.693468522025650433e-06,
                5.636112541199657300e-06,
                5.579618879398852879e-06,
                5.523970337605772807e-06,
                5.469150143449590017e-06,
                5.415141938569115003e-06,
                5.361929766410289256e-06,
                5.309498060441218510e-06,
                5.257831632768494626e-06,
                5.206915663139233402e-06,
                5.156735688314019651e-06,
                5.107277591796479401e-06,
                5.058527593905909755e-06,
                5.010472242179889078e-06,
                4.963098402094443213e-06,
                4.916393248089787315e-06,
                4.870344254890174453e-06,
                4.824939189106941219e-06,
                4.780166101114209846e-06,
                4.736013317187166307e-06,
                4.692469431893281090e-06,
                4.649523300727212877e-06,
                4.607164032980489431e-06,
                4.565380984837501284e-06,
                4.524163752689590313e-06,
                4.483502166659412564e-06,
                4.443386284328062107e-06,
                4.403806384657713835e-06,
                4.364752962102866602e-06,
                4.326216720903508720e-06,
                4.288188569553848814e-06,
                4.250659615440412617e-06,
                4.213621159643655231e-06,
                4.177064691897379870e-06,
                4.140981885700533592e-06,
                4.105364593576130954e-06,
                4.070204842472261525e-06,
                4.035494829300335365e-06,
                4.001226916605933204e-06,
                3.967393628367727162e-06,
                3.933987645920202953e-06,
                3.901001803996013635e-06,
                3.868429086883971992e-06,
                3.836262624698840256e-06,
                3.804495689759206311e-06,
                3.773121693069888424e-06,
                3.742134180905442679e-06,
                3.711526831491437910e-06,
                3.681293451780367090e-06,
                3.651427974319040819e-06,
                3.621924454204609259e-06,
                3.592777066126267373e-06,
                3.563980101489961779e-06,
                3.535527965623406063e-06,
                3.507415175058878707e-06,
                3.479636354891340028e-06,
                3.452186236209451557e-06,
            ];

            foreach ((AlphaDistribution dist, ddouble[] expecteds) in new[]{
                (dist1, expected_dist1), (dist2, expected_dist2)
            }) {
                for ((ddouble x, int i) = (0, 0); i < expecteds.Length; x += 0.5, i++) {
                    ddouble expected = expecteds[i];
                    ddouble actual = dist.PDF(x);

                    Console.WriteLine($"{dist} pdf({x})");
                    Console.WriteLine(expected);
                    Console.WriteLine(actual);

                    if (expected > 0) {
                        Assert.IsTrue(ddouble.Abs(expected - actual) / expected < 1e-14, $"{dist} pdf({x})\n{expected}\n{actual}");
                    }
                    else {
                        Assert.AreEqual(0, actual);
                    }
                }
            }
        }

        [TestMethod()]
        public void CDFExpectedTest() {
            ddouble[] expected_dist1 = [
                0.000000000000000000e+00,
                1.885734173450602513e-01,
                5.942867086725300840e-01,
                7.494652611366826589e-01,
                8.218539005622801374e-01,
                8.626034519633181130e-01,
                8.884674991387880860e-01,
                9.062572049518758943e-01,
                9.192101706666228056e-01,
                9.290483934096397389e-01,
                9.367677222677927018e-01,
                9.429824289751315147e-01,
                9.480912821572097249e-01,
                9.523641064294775527e-01,
                9.559898419817286497e-01,
                9.591046555276797614e-01,
                9.618091168083007236e-01,
                9.641790907395622057e-01,
                9.662728685873644974e-01,
                9.681359682446997184e-01,
                9.698044451647021003e-01,
                9.713072257671265808e-01,
                9.726677837837017782e-01,
                9.739053654543219363e-01,
                9.750358989802057064e-01,
                9.760726791520552004e-01,
                9.770268893628607509e-01,
                9.779080043085162099e-01,
                9.787241039951922739e-01,
                9.794821210171180681e-01,
                9.801880370696289813e-01,
                9.808470404446116842e-01,
                9.814636532503944188e-01,
                9.820418349305303218e-01,
                9.825850670744255000e-01,
                9.830964233465084856e-01,
                9.835786274919868788e-01,
                9.840341017241781563e-01,
                9.844650073031027127e-01,
                9.848732787362808327e-01,
                9.852606527407797854e-01,
                9.856286928789590451e-01,
                9.859788106032255639e-01,
                9.863122833057227368e-01,
                9.866302698585243114e-01,
                9.869338240420013619e-01,
                9.872239061886377565e-01,
                9.875013933128770072e-01,
                9.877670879517093105e-01,
                9.880217259033919897e-01,
                9.882659830212139340e-01,
                9.885004811941922043e-01,
                9.887257936259711277e-01,
                9.889424495061289733e-01,
                9.891509381539216328e-01,
                9.893517127026708602e-01,
                9.895451933831141966e-01,
                9.897317704557193618e-01,
                9.899118068349765931e-01,
                9.900856404427547108e-01,
                9.902535863227962531e-01,
                9.904159385441598795e-01,
                9.905729719177778225e-01,
                9.907249435471879861e-01,
                9.908720942318266500e-01,
                9.910146497389819009e-01,
                9.911528219585226118e-01,
                9.912868099528147070e-01,
                9.914168009127584114e-01,
                9.915429710295917687e-01,
                9.916654862909930479e-01,
                9.917845032090406576e-01,
                9.919001694867378705e-01,
                9.920126246290666971e-01,
                9.921220005038816625e-01,
                9.922284218573824699e-01,
                9.923320067883992790e-01,
                9.924328671852767902e-01,
                9.925311091287563059e-01,
                9.926268332638996661e-01,
                9.927201351437995314e-01,
                9.928111055475341562e-01,
                9.928998307745992014e-01,
                9.929863929178150972e-01,
                9.930708701165250618e-01,
                9.931533367917270150e-01,
                9.932338638646225348e-01,
                9.933125189599317784e-01,
                9.933893665952000518e-01,
                9.934644683572090296e-01,
                9.935378830665034799e-01,
                9.936096669309605334e-01,
                9.936798736892412665e-01,
                9.937485547448942080e-01,
                9.938157592918134275e-01,
                9.938815344316962452e-01,
                9.939459252840864290e-01,
                9.940089750895459986e-01,
                9.940707253064495763e-01,
                9.941312157018562523e-01,
                9.941904844368790739e-01,
                9.942485681469346304e-01,
                9.943055020172295588e-01,
                9.943613198538087117e-01,
                9.944160541504675210e-01,
                9.944697361518075596e-01,
                9.945223959126887614e-01,
                9.945740623543216641e-01,
                9.946247633172127234e-01,
                9.946745256111733102e-01,
                9.947233750625739113e-01,
                9.947713365590271639e-01,
                9.948184340916506052e-01,
                9.948646907950730034e-01,
                9.949101289853122809e-01,
                9.949547701956649171e-01,
                9.949986352107212939e-01,
                9.950417440986234485e-01,
                9.950841162416699248e-01,
                9.951257703653635378e-01,
                9.951667245659976402e-01,
                9.952069963368616046e-01,
                9.952466025931483440e-01,
                9.952855596956374784e-01,
                9.953238834732245355e-01,
                9.953615892443580249e-01,
                9.953986918374511106e-01,
                9.954352056103192847e-01,
                9.954711444687014410e-01,
                9.955065218839128649e-01,
                9.955413509096771030e-01,
                9.955756441981818972e-01,
                9.956094140153993743e-01,
                9.956426722557103481e-01,
                9.956754304558698143e-01,
                9.957076998083466135e-01,
                9.957394911740701238e-01,
                9.957708150946161796e-01,
                9.958016818038580853e-01,
                9.958321012391114779e-01,
                9.958620830517995737e-01,
                9.958916366176598922e-01,
                9.959207710465173280e-01,
                9.959494951916447736e-01,
                9.959778176587310572e-01,
                9.960057468144745130e-01,
                9.960332907948228343e-01,
                9.960604575128720883e-01,
                9.960872546664449878e-01,
                9.961136897453626293e-01,
                9.961397700384211351e-01,
                9.961655026400912938e-01,
                9.961908944569517477e-01,
                9.962159522138681611e-01,
                9.962406824599295829e-01,
                9.962650915741539936e-01,
                9.962891857709736954e-01,
                9.963129711055089821e-01,
                9.963364534786399718e-01,
                9.963596386418874795e-01,
                9.963825322021079289e-01,
                9.964051396260137361e-01,
                9.964274662445234965e-01,
                9.964495172569539649e-01,
                9.964712977350542733e-01,
                9.964928126268953745e-01,
                9.965140667606163793e-01,
                9.965350648480373330e-01,
                9.965558114881397644e-01,
                9.965763111704248889e-01,
                9.965965682781515733e-01,
                9.966165870914615033e-01,
                9.966363717903925501e-01,
                9.966559264577888877e-01,
                9.966752550821089685e-01,
                9.966943615601379092e-01,
                9.967132496996055080e-01,
                9.967319232217163316e-01,
                9.967503857635925391e-01,
                9.967686408806368803e-01,
                9.967866920488136495e-01,
                9.968045426668550313e-01,
                9.968221960583946162e-01,
                9.968396554740303062e-01,
                9.968569240933186082e-01,
                9.968740050267058672e-01,
                9.968909013173946621e-01,
                9.969076159431526918e-01,
                9.969241518180598227e-01,
                9.969405117942039540e-01,
                9.969566986633192629e-01,
                9.969727151583746005e-01,
                9.969885639551115952e-01,
                9.970042476735349046e-01,
                9.970197688793560609e-01,
                9.970351300853916854e-01,
                9.970503337529201815e-01,
                9.970653822929969046e-01,
                9.970802780677272548e-01,
                9.970950233915040206e-01,
                9.971096205322048656e-01,
                9.971240717123556196e-01,
                9.971383791102583771e-01,
                9.971525448610855102e-01,
                9.971665710579420416e-01,
                9.971804597528971525e-01,
                9.971942129579836056e-01,
                9.972078326461707443e-01,
                9.972213207523067391e-01,
                9.972346791740358540e-01,
                9.972479097726879571e-01,
                9.972610143741426070e-01,
                9.972739947696696028e-01,
                9.972868527167449981e-01,
                9.972995899398440223e-01,
                9.973122081312123521e-01,
                9.973247089516154018e-01,
                9.973370940310667399e-01,
                9.973493649695371888e-01,
                9.973615233376428302e-01,
                9.973735706773159126e-01,
                9.973855085024565525e-01,
                9.973973382995665604e-01,
                9.974090615283667249e-01,
                9.974206796223969995e-01,
                9.974321939896009237e-01,
                9.974436060128947235e-01,
                9.974549170507202023e-01,
                9.974661284375839765e-01,
                9.974772414845834989e-01,
                9.974882574799158741e-01,
                9.974991776893775697e-01,
                9.975100033568489177e-01,
                9.975207357047647383e-01,
                9.975313759345769693e-01,
                9.975419252272013093e-01,
                9.975523847434545344e-01,
                9.975627556244803795e-01,
                9.975730389921645402e-01,
                9.975832359495390156e-01,
                9.975933475811766815e-01,
                9.976033749535756501e-01,
                9.976133191155344138e-01,
                9.976231810985177750e-01,
                9.976329619170122287e-01,
                9.976426625688755712e-01,
                9.976522840356751853e-01,
                9.976618272830192202e-01,
                9.976712932608794437e-01,
                9.976806829039073232e-01,
                9.976899971317404470e-01,
                9.976992368493038388e-01,
                9.977084029471022797e-01,
                9.977174963015068565e-01,
                9.977265177750339609e-01,
                9.977354682166179600e-01,
            ];
            ddouble[] expected_dist2 = [
                0.000000000000000000e+00,
                5.116398746584290835e-01,
                8.609310408460744135e-01,
                9.299451552608872795e-01,
                9.549172931499002592e-01,
                9.672047438437931799e-01,
                9.743768496233681242e-01,
                9.790350436787500499e-01,
                9.822880253234067549e-01,
                9.846814531732152043e-01,
                9.865129813821088556e-01,
                9.879580008821200465e-01,
                9.891262450023942110e-01,
                9.900897370177114132e-01,
                9.908976358459619105e-01,
                9.915846048923433464e-01,
                9.921757678695570792e-01,
                9.926897677875419213e-01,
                9.931407231878016661e-01,
                9.935395180254946723e-01,
                9.938946751870972873e-01,
                9.942129621051177812e-01,
                9.944998194745019449e-01,
                9.947596704413972368e-01,
                9.949961473470653184e-01,
                9.952122605398914246e-01,
                9.954105257906039617e-01,
                9.955930616709919301e-01,
                9.957616648326829134e-01,
                9.959178688161200999e-01,
                9.960629904402029666e-01,
                9.961981667245835004e-01,
                9.963243845219206252e-01,
                9.964425044839434475e-01,
                9.965532805849586229e-01,
                9.966573761337697013e-01,
                9.967553769887071979e-01,
                9.968478025290736788e-01,
                9.969351148147572728e-01,
                9.970177262734326584e-01,
                9.970960061840511424e-01,
                9.971702861707448795e-01,
                9.972408648788566587e-01,
                9.973080119715936886e-01,
                9.973719715596616187e-01,
                9.974329651554929566e-01,
                9.974911942271694754e-01,
                9.975468424138792534e-01,
                9.976000774540790816e-01,
                9.976510528688803392e-01,
                9.976999094361380660e-01,
                9.977467764849720089e-01,
                9.977917730357125370e-01,
                9.978350088063789869e-01,
                9.978765851035605872e-01,
                9.979165956128895898e-01,
                9.979551271020628000e-01,
                9.979922600474868677e-01,
                9.980280691940514037e-01,
                9.980626240562081586e-01,
                9.980959893674068439e-01,
                9.981282254839934920e-01,
                9.981593887488586780e-01,
                9.981895318194407007e-01,
                9.982187039640901816e-01,
                9.982469513303003916e-01,
                9.982743171878682986e-01,
                9.983008421496789575e-01,
                9.983265643724763549e-01,
                9.983515197397060392e-01,
                9.983757420282699524e-01,
                9.983992630608190533e-01,
                9.984221128450270211e-01,
                9.984443197011234616e-01,
                9.984659103788270373e-01,
                9.984869101646898226e-01,
                9.985073429807590495e-01,
                9.985272314753634859e-01,
                9.985465971067493118e-01,
                9.985654602202119756e-01,
                9.985838401193090075e-01,
                9.986017551316740404e-01,
                9.986192226699052155e-01,
                9.986362592879529654e-01,
                9.986528807333885371e-01,
                9.986691019959028637e-01,
                9.986849373523452034e-01,
                9.987004004085915376e-01,
                9.987155041384936371e-01,
                9.987302609201498260e-01,
                9.987446825697039454e-01,
                9.987587803728716906e-01,
                9.987725651143676275e-01,
                9.987860471053955358e-01,
                9.987992362093475185e-01,
                9.988121418658491013e-01,
                9.988247731132712248e-01,
                9.988371386098219284e-01,
                9.988492466533223091e-01,
                9.988611051997612345e-01,
                9.988727218807146313e-01,
                9.988841040197113941e-01,
                9.988952586476179674e-01,
                9.989061925171105472e-01,
                9.989169121162970733e-01,
                9.989274236815465224e-01,
                9.989377332095790152e-01,
                9.989478464688656967e-01,
                9.989577690103847996e-01,
                9.989675061777741893e-01,
                9.989770631169213599e-01,
                9.989864447850258511e-01,
                9.989956559591676166e-01,
                9.990047012444134289e-01,
                9.990135850814889640e-01,
                9.990223117540436570e-01,
                9.990308853955340851e-01,
                9.990393099957489698e-01,
                9.990475894069957841e-01,
                9.990557273499713897e-01,
                9.990637274193345796e-01,
                9.990715930889965124e-01,
                9.990793277171491349e-01,
                9.990869345510421384e-01,
                9.990944167315267688e-01,
                9.991017772973777022e-01,
                9.991090191894056449e-01,
                9.991161452543737553e-01,
                9.991231582487259955e-01,
                9.991300608421411766e-01,
                9.991368556209196949e-01,
                9.991435450912128369e-01,
                9.991501316821035372e-01,
                9.991566177485456945e-01,
                9.991630055741708150e-01,
                9.991692973739667583e-01,
                9.991754952968380232e-01,
                9.991816014280514580e-01,
                9.991876177915746116e-01,
                9.991935463523115013e-01,
                9.991993890182409022e-01,
                9.992051476424637091e-01,
                9.992108240251607043e-01,
                9.992164199154686122e-01,
                9.992219370132763290e-01,
                9.992273769709459907e-01,
                9.992327413949619874e-01,
                9.992380318475124756e-01,
                9.992432498480049441e-01,
                9.992483968745217160e-01,
                9.992534743652135010e-01,
                9.992584837196406555e-01,
                9.992634263000576000e-01,
                9.992683034326480529e-01,
                9.992731164087106377e-01,
                9.992778664857983051e-01,
                9.992825548888141229e-01,
                9.992871828110631016e-01,
                9.992917514152649394e-01,
                9.992962618345274661e-01,
                9.993007151732838933e-01,
                9.993051125081929831e-01,
                9.993094548890073536e-01,
                9.993137433394086999e-01,
                9.993179788578120393e-01,
                9.993221624181402030e-01,
                9.993262949705704612e-01,
                9.993303774422535035e-01,
                9.993344107380073282e-01,
                9.993383957409844864e-01,
                9.993423333133182318e-01,
                9.993462242967424691e-01,
                9.993500695131924960e-01,
                9.993538697653835401e-01,
                9.993576258373693122e-01,
                9.993613384950804646e-01,
                9.993650084868461736e-01,
                9.993686365438962937e-01,
                9.993722233808470801e-01,
                9.993757696961698134e-01,
                9.993792761726452145e-01,
                9.993827434778008723e-01,
                9.993861722643343493e-01,
                9.993895631705239646e-01,
                9.993929168206233671e-01,
                9.993962338252460054e-01,
                9.993995147817344993e-01,
                9.994027602745193528e-01,
                9.994059708754670091e-01,
                9.994091471442141383e-01,
                9.994122896284939328e-01,
                9.994153988644501885e-01,
                9.994184753769429497e-01,
                9.994215196798431622e-01,
                9.994245322763186667e-01,
                9.994275136591120878e-01,
                9.994304643108088415e-01,
                9.994333847040977048e-01,
                9.994362753020233914e-01,
                9.994391365582308007e-01,
                9.994419689172024945e-01,
                9.994447728144894016e-01,
                9.994475486769329731e-01,
                9.994502969228825640e-01,
                9.994530179624057098e-01,
                9.994557121974910752e-01,
                9.994583800222476277e-01,
                9.994610218230959298e-01,
                9.994636379789547664e-01,
                9.994662288614230006e-01,
                9.994687948349543216e-01,
                9.994713362570293302e-01,
                9.994738534783208506e-01,
                9.994763468428551345e-01,
                9.994788166881689584e-01,
                9.994812633454616124e-01,
                9.994836871397435596e-01,
                9.994860883899788773e-01,
                9.994884674092271437e-01,
                9.994908245047776640e-01,
                9.994931599782832521e-01,
                9.994954741258876840e-01,
                9.994977672383514866e-01,
                9.995000396011738397e-01,
                9.995022914947107040e-01,
                9.995045231942899511e-01,
                9.995067349703242732e-01,
                9.995089270884196520e-01,
                9.995110998094821619e-01,
                9.995132533898209992e-01,
                9.995153880812501779e-01,
                9.995175041311851194e-01,
                9.995196017827401302e-01,
                9.995216812748196622e-01,
                9.995237428422104609e-01,
                9.995257867156691622e-01,
                9.995278131220083351e-01,
                9.995298222841808577e-01,
                9.995318144213615197e-01,
                9.995337897490260692e-01,
                9.995357484790299285e-01,
                9.995376908196833554e-01,
                9.995396169758252736e-01,
                9.995415271488952147e-01,
                9.995434215370039288e-01,
                9.995453003350016630e-01,
                9.995471637345446636e-01,
                9.995490119241607907e-01,
                9.995508450893126895e-01,
                9.995526634124606291e-01,
                9.995544670731216774e-01,
                9.995562562479299862e-01,
                9.995580311106939675e-01,
                9.995597918324525821e-01,
                9.995615385815301845e-01,
                9.995632715235904797e-01,
            ];

            foreach ((AlphaDistribution dist, ddouble[] expecteds) in new[]{
                (dist1, expected_dist1), (dist2, expected_dist2)
            }) {
                for ((ddouble x, int i) = (0, 0); i < expecteds.Length; x += 0.5, i++) {
                    ddouble expected = expecteds[i];
                    ddouble actual = dist.CDF(x);

                    Console.WriteLine($"{dist} cdf({x})");
                    Console.WriteLine(expected);
                    Console.WriteLine(actual);

                    if (expected > 0) {
                        Assert.IsTrue(ddouble.Abs(expected - actual) / expected < 1e-14, $"{dist} cdf({x})\n{expected}\n{actual}");
                    }
                    else {
                        Assert.AreEqual(0, actual);
                    }
                }
            }
        }
    }
}